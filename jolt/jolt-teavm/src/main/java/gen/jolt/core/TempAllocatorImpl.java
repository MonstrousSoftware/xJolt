/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.core;

public class TempAllocatorImpl extends TempAllocator {

    static public final TempAllocatorImpl NULL = TempAllocatorImpl.native_new();

    public TempAllocatorImpl(int size) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_int(size);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.TempAllocatorImpl(size);
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"size"}, script = "var jsObj = new jolt.TempAllocatorImpl(size);return jolt.getPointer(jsObj);")
    public static native int internal_native_create_int(int size);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected TempAllocatorImpl(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static TempAllocatorImpl native_new() {
        return new TempAllocatorImpl((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.TempAllocatorImpl);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.TempAllocatorImpl);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);
}
