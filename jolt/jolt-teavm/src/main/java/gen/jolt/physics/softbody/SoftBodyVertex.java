/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.softbody;

import gen.jolt.idl.IDLBase;
import gen.jolt.math.Vec3;

public class SoftBodyVertex extends IDLBase {

    private Vec3 Vec3_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_1;

    private Vec3 Vec3_TEMP_GEN_2;

    static public final SoftBodyVertex NULL = SoftBodyVertex.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected SoftBodyVertex(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static SoftBodyVertex native_new() {
        return new SoftBodyVertex((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyVertex);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyVertex);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public Vec3 get_mPreviousPosition() {
        int pointer = internal_native_get_mPreviousPosition(native_address);
        if (pointer == 0)
            return Vec3.NULL;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = Vec3.native_new();
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyVertex);
var returnedJSObj = jsObj.get_mPreviousPosition();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyVertex);var returnedJSObj = jsObj.get_mPreviousPosition();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mPreviousPosition(int this_addr);

    public void set_mPreviousPosition(Vec3 mPreviousPosition) {
        internal_native_set_mPreviousPosition(native_address, mPreviousPosition.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyVertex);
jsObj.set_mPreviousPosition(mPreviousPosition_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mPreviousPosition_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyVertex);jsObj.set_mPreviousPosition(mPreviousPosition_addr);")
    public static native void internal_native_set_mPreviousPosition(int this_addr, int mPreviousPosition_addr);

    public Vec3 get_mPosition() {
        int pointer = internal_native_get_mPosition(native_address);
        if (pointer == 0)
            return Vec3.NULL;
        if (Vec3_TEMP_GEN_1 == null)
            Vec3_TEMP_GEN_1 = Vec3.native_new();
        Vec3_TEMP_GEN_1.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyVertex);
var returnedJSObj = jsObj.get_mPosition();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyVertex);var returnedJSObj = jsObj.get_mPosition();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mPosition(int this_addr);

    public void set_mPosition(Vec3 mPosition) {
        internal_native_set_mPosition(native_address, mPosition.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyVertex);
jsObj.set_mPosition(mPosition_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mPosition_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyVertex);jsObj.set_mPosition(mPosition_addr);")
    public static native void internal_native_set_mPosition(int this_addr, int mPosition_addr);

    public Vec3 get_mVelocity() {
        int pointer = internal_native_get_mVelocity(native_address);
        if (pointer == 0)
            return Vec3.NULL;
        if (Vec3_TEMP_GEN_2 == null)
            Vec3_TEMP_GEN_2 = Vec3.native_new();
        Vec3_TEMP_GEN_2.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_2;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyVertex);
var returnedJSObj = jsObj.get_mVelocity();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyVertex);var returnedJSObj = jsObj.get_mVelocity();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_get_mVelocity(int this_addr);

    public void set_mVelocity(Vec3 mVelocity) {
        internal_native_set_mVelocity(native_address, mVelocity.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyVertex);
jsObj.set_mVelocity(mVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyVertex);jsObj.set_mVelocity(mVelocity_addr);")
    public static native void internal_native_set_mVelocity(int this_addr, int mVelocity_addr);

    public float get_mInvMass() {
        return internal_native_get_mInvMass(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyVertex);
return jsObj.get_mInvMass();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyVertex);return jsObj.get_mInvMass();")
    public static native float internal_native_get_mInvMass(int this_addr);

    public void set_mInvMass(float mInvMass) {
        internal_native_set_mInvMass(native_address, mInvMass);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyVertex);
jsObj.set_mInvMass(mInvMass);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "mInvMass"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyVertex);jsObj.set_mInvMass(mInvMass);")
    public static native void internal_native_set_mInvMass(int this_addr, float mInvMass);
}
