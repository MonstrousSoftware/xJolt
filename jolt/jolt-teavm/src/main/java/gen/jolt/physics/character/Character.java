/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.character;

import gen.jolt.CharacterSettings;
import gen.jolt.RVec3;
import gen.jolt.math.Quat;
import gen.jolt.physics.PhysicsSystem;
import gen.jolt.enums.EActivation;
import gen.jolt.math.Vec3;
import gen.jolt.physics.body.BodyID;
import gen.jolt.RMat44;
import gen.jolt.physics.collision.shape.Shape;
import gen.jolt.physics.collision.TransformedShape;
import gen.jolt.physics.softbody.CollideShapeCollector;

public class Character extends CharacterBase {

    private Vec3 Vec3_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_1;

    private BodyID BodyID_TEMP_GEN_0;

    private RVec3 RVec3_TEMP_GEN_0;

    private RVec3 RVec3_TEMP_GEN_1;

    private Quat Quat_TEMP_GEN_0;

    private Quat Quat_TEMP_GEN_1;

    private RVec3 RVec3_TEMP_GEN_2;

    private RVec3 RVec3_TEMP_GEN_3;

    private RMat44 RMat44_TEMP_GEN_0;

    private RMat44 RMat44_TEMP_GEN_1;

    private TransformedShape TransformedShape_TEMP_GEN_0;

    private TransformedShape TransformedShape_TEMP_GEN_1;

    static public final Character NULL = Character.native_new();

    static public final Character T_01 = Character.native_new();

    static public final Character T_02 = Character.native_new();

    static public final Character T_03 = Character.native_new();

    public Character(CharacterSettings inSettings, RVec3 inPosition, Quat inRotation, long inUserData, PhysicsSystem inSystem) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_CharacterSettings_RVec3_Quat_long_PhysicsSystem(inSettings.native_address, inPosition.native_address, inRotation.native_address, (int) inUserData, inSystem.native_address);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.Character(inSettings_addr, inPosition_addr, inRotation_addr, inUserData, inSystem_addr);
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"inSettings_addr", "inPosition_addr", "inRotation_addr", "inUserData", "inSystem_addr"}, script = "var jsObj = new jolt.Character(inSettings_addr, inPosition_addr, inRotation_addr, inUserData, inSystem_addr);return jolt.getPointer(jsObj);")
    public static native int internal_native_create_CharacterSettings_RVec3_Quat_long_PhysicsSystem(int inSettings_addr, int inPosition_addr, int inRotation_addr, int inUserData, int inSystem_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected Character(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static Character native_new() {
        return new Character((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public void AddToPhysicsSystem(EActivation inActivationMode, boolean inLockBodies) {
        internal_native_AddToPhysicsSystem(native_address, (int) inActivationMode.getValue(), inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.AddToPhysicsSystem(inActivationMode, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inActivationMode", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.AddToPhysicsSystem(inActivationMode, inLockBodies);")
    public static native void internal_native_AddToPhysicsSystem(int this_addr, int inActivationMode, boolean inLockBodies);

    public void AddToPhysicsSystem(EActivation inActivationMode) {
        internal_native_AddToPhysicsSystem(native_address, (int) inActivationMode.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.AddToPhysicsSystem(inActivationMode);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inActivationMode"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.AddToPhysicsSystem(inActivationMode);")
    public static native void internal_native_AddToPhysicsSystem(int this_addr, int inActivationMode);

    public void AddToPhysicsSystem() {
        internal_native_AddToPhysicsSystem(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.AddToPhysicsSystem();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.AddToPhysicsSystem();")
    public static native void internal_native_AddToPhysicsSystem(int this_addr);

    public void RemoveFromPhysicsSystem(boolean inLockBodies) {
        internal_native_RemoveFromPhysicsSystem(native_address, inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.RemoveFromPhysicsSystem(inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.RemoveFromPhysicsSystem(inLockBodies);")
    public static native void internal_native_RemoveFromPhysicsSystem(int this_addr, boolean inLockBodies);

    public void RemoveFromPhysicsSystem() {
        internal_native_RemoveFromPhysicsSystem(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.RemoveFromPhysicsSystem();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.RemoveFromPhysicsSystem();")
    public static native void internal_native_RemoveFromPhysicsSystem(int this_addr);

    public void Activate(boolean inLockBodies) {
        internal_native_Activate(native_address, inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.Activate(inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.Activate(inLockBodies);")
    public static native void internal_native_Activate(int this_addr, boolean inLockBodies);

    public void Activate() {
        internal_native_Activate(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.Activate();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.Activate();")
    public static native void internal_native_Activate(int this_addr);

    public void PostSimulation(float inMaxSeparationDistance, boolean inLockBodies) {
        internal_native_PostSimulation(native_address, inMaxSeparationDistance, inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.PostSimulation(inMaxSeparationDistance, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inMaxSeparationDistance", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.PostSimulation(inMaxSeparationDistance, inLockBodies);")
    public static native void internal_native_PostSimulation(int this_addr, float inMaxSeparationDistance, boolean inLockBodies);

    public void PostSimulation(float inMaxSeparationDistance) {
        internal_native_PostSimulation(native_address, inMaxSeparationDistance);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.PostSimulation(inMaxSeparationDistance);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inMaxSeparationDistance"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.PostSimulation(inMaxSeparationDistance);")
    public static native void internal_native_PostSimulation(int this_addr, float inMaxSeparationDistance);

    public void SetLinearAndAngularVelocity(Vec3 inLinearVelocity, Vec3 inAngularVelocity, boolean inLockBodies) {
        internal_native_SetLinearAndAngularVelocity(native_address, inLinearVelocity.native_address, inAngularVelocity.native_address, inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.SetLinearAndAngularVelocity(inLinearVelocity_addr, inAngularVelocity_addr, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLinearVelocity_addr", "inAngularVelocity_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.SetLinearAndAngularVelocity(inLinearVelocity_addr, inAngularVelocity_addr, inLockBodies);")
    public static native void internal_native_SetLinearAndAngularVelocity(int this_addr, int inLinearVelocity_addr, int inAngularVelocity_addr, boolean inLockBodies);

    public void SetLinearAndAngularVelocity(Vec3 inLinearVelocity, Vec3 inAngularVelocity) {
        internal_native_SetLinearAndAngularVelocity(native_address, inLinearVelocity.native_address, inAngularVelocity.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.SetLinearAndAngularVelocity(inLinearVelocity_addr, inAngularVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLinearVelocity_addr", "inAngularVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.SetLinearAndAngularVelocity(inLinearVelocity_addr, inAngularVelocity_addr);")
    public static native void internal_native_SetLinearAndAngularVelocity(int this_addr, int inLinearVelocity_addr, int inAngularVelocity_addr);

    public Vec3 GetLinearVelocity(boolean inLockBodies) {
        int pointer = internal_native_GetLinearVelocity(native_address, inLockBodies);
        if (pointer == 0)
            return Vec3.NULL;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = Vec3.native_new();
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
var returnedJSObj = jsObj.GetLinearVelocity(inLockBodies);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);var returnedJSObj = jsObj.GetLinearVelocity(inLockBodies);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetLinearVelocity(int this_addr, boolean inLockBodies);

    public Vec3 GetLinearVelocity() {
        int pointer = internal_native_GetLinearVelocity(native_address);
        if (pointer == 0)
            return Vec3.NULL;
        if (Vec3_TEMP_GEN_1 == null)
            Vec3_TEMP_GEN_1 = Vec3.native_new();
        Vec3_TEMP_GEN_1.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
var returnedJSObj = jsObj.GetLinearVelocity();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);var returnedJSObj = jsObj.GetLinearVelocity();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetLinearVelocity(int this_addr);

    public void SetLinearVelocity(Vec3 inLinearVelocity, boolean inLockBodies) {
        internal_native_SetLinearVelocity(native_address, inLinearVelocity.native_address, inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.SetLinearVelocity(inLinearVelocity_addr, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLinearVelocity_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.SetLinearVelocity(inLinearVelocity_addr, inLockBodies);")
    public static native void internal_native_SetLinearVelocity(int this_addr, int inLinearVelocity_addr, boolean inLockBodies);

    public void SetLinearVelocity(Vec3 inLinearVelocity) {
        internal_native_SetLinearVelocity(native_address, inLinearVelocity.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.SetLinearVelocity(inLinearVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLinearVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.SetLinearVelocity(inLinearVelocity_addr);")
    public static native void internal_native_SetLinearVelocity(int this_addr, int inLinearVelocity_addr);

    public void AddLinearVelocity(Vec3 inLinearVelocity, boolean inLockBodies) {
        internal_native_AddLinearVelocity(native_address, inLinearVelocity.native_address, inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.AddLinearVelocity(inLinearVelocity_addr, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLinearVelocity_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.AddLinearVelocity(inLinearVelocity_addr, inLockBodies);")
    public static native void internal_native_AddLinearVelocity(int this_addr, int inLinearVelocity_addr, boolean inLockBodies);

    public void AddLinearVelocity(Vec3 inLinearVelocity) {
        internal_native_AddLinearVelocity(native_address, inLinearVelocity.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.AddLinearVelocity(inLinearVelocity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLinearVelocity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.AddLinearVelocity(inLinearVelocity_addr);")
    public static native void internal_native_AddLinearVelocity(int this_addr, int inLinearVelocity_addr);

    public void AddImpulse(Vec3 inImpulse, boolean inLockBodies) {
        internal_native_AddImpulse(native_address, inImpulse.native_address, inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.AddImpulse(inImpulse_addr, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inImpulse_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.AddImpulse(inImpulse_addr, inLockBodies);")
    public static native void internal_native_AddImpulse(int this_addr, int inImpulse_addr, boolean inLockBodies);

    public BodyID GetBodyID() {
        int pointer = internal_native_GetBodyID(native_address);
        if (pointer == 0)
            return BodyID.NULL;
        if (BodyID_TEMP_GEN_0 == null)
            BodyID_TEMP_GEN_0 = BodyID.native_new();
        BodyID_TEMP_GEN_0.internal_reset(pointer, false);
        return BodyID_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
var returnedJSObj = jsObj.GetBodyID();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);var returnedJSObj = jsObj.GetBodyID();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetBodyID(int this_addr);

    public void GetPositionAndRotation(RVec3 outPosition, Quat outRotation, boolean inLockBodies) {
        internal_native_GetPositionAndRotation(native_address, outPosition.native_address, outRotation.native_address, inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.GetPositionAndRotation(outPosition_addr, outRotation_addr, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "outPosition_addr", "outRotation_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.GetPositionAndRotation(outPosition_addr, outRotation_addr, inLockBodies);")
    public static native void internal_native_GetPositionAndRotation(int this_addr, int outPosition_addr, int outRotation_addr, boolean inLockBodies);

    public void GetPositionAndRotation(RVec3 outPosition, Quat outRotation) {
        internal_native_GetPositionAndRotation(native_address, outPosition.native_address, outRotation.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.GetPositionAndRotation(outPosition_addr, outRotation_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "outPosition_addr", "outRotation_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.GetPositionAndRotation(outPosition_addr, outRotation_addr);")
    public static native void internal_native_GetPositionAndRotation(int this_addr, int outPosition_addr, int outRotation_addr);

    public void SetPositionAndRotation(RVec3 inPosition, Quat inRotation, EActivation inActivationMode, boolean inLockBodies) {
        internal_native_SetPositionAndRotation(native_address, inPosition.native_address, inRotation.native_address, (int) inActivationMode.getValue(), inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.SetPositionAndRotation(inPosition_addr, inRotation_addr, inActivationMode, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inPosition_addr", "inRotation_addr", "inActivationMode", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.SetPositionAndRotation(inPosition_addr, inRotation_addr, inActivationMode, inLockBodies);")
    public static native void internal_native_SetPositionAndRotation(int this_addr, int inPosition_addr, int inRotation_addr, int inActivationMode, boolean inLockBodies);

    public void SetPositionAndRotation(RVec3 inPosition, Quat inRotation, EActivation inActivationMode) {
        internal_native_SetPositionAndRotation(native_address, inPosition.native_address, inRotation.native_address, (int) inActivationMode.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.SetPositionAndRotation(inPosition_addr, inRotation_addr, inActivationMode);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inPosition_addr", "inRotation_addr", "inActivationMode"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.SetPositionAndRotation(inPosition_addr, inRotation_addr, inActivationMode);")
    public static native void internal_native_SetPositionAndRotation(int this_addr, int inPosition_addr, int inRotation_addr, int inActivationMode);

    public void SetPositionAndRotation(RVec3 inPosition, Quat inRotation) {
        internal_native_SetPositionAndRotation(native_address, inPosition.native_address, inRotation.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.SetPositionAndRotation(inPosition_addr, inRotation_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inPosition_addr", "inRotation_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.SetPositionAndRotation(inPosition_addr, inRotation_addr);")
    public static native void internal_native_SetPositionAndRotation(int this_addr, int inPosition_addr, int inRotation_addr);

    public RVec3 GetPosition(boolean inLockBodies) {
        int pointer = internal_native_GetPosition(native_address, inLockBodies);
        if (pointer == 0)
            return RVec3.NULL;
        if (RVec3_TEMP_GEN_0 == null)
            RVec3_TEMP_GEN_0 = RVec3.native_new();
        RVec3_TEMP_GEN_0.internal_reset(pointer, false);
        return RVec3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
var returnedJSObj = jsObj.GetPosition(inLockBodies);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);var returnedJSObj = jsObj.GetPosition(inLockBodies);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetPosition(int this_addr, boolean inLockBodies);

    public RVec3 GetPosition() {
        int pointer = internal_native_GetPosition(native_address);
        if (pointer == 0)
            return RVec3.NULL;
        if (RVec3_TEMP_GEN_1 == null)
            RVec3_TEMP_GEN_1 = RVec3.native_new();
        RVec3_TEMP_GEN_1.internal_reset(pointer, false);
        return RVec3_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
var returnedJSObj = jsObj.GetPosition();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);var returnedJSObj = jsObj.GetPosition();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetPosition(int this_addr);

    public void SetPosition(RVec3 inPosition, EActivation inActivationMode, boolean inLockBodies) {
        internal_native_SetPosition(native_address, inPosition.native_address, (int) inActivationMode.getValue(), inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.SetPosition(inPosition_addr, inActivationMode, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inPosition_addr", "inActivationMode", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.SetPosition(inPosition_addr, inActivationMode, inLockBodies);")
    public static native void internal_native_SetPosition(int this_addr, int inPosition_addr, int inActivationMode, boolean inLockBodies);

    public void SetPosition(RVec3 inPosition, EActivation inActivationMode) {
        internal_native_SetPosition(native_address, inPosition.native_address, (int) inActivationMode.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.SetPosition(inPosition_addr, inActivationMode);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inPosition_addr", "inActivationMode"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.SetPosition(inPosition_addr, inActivationMode);")
    public static native void internal_native_SetPosition(int this_addr, int inPosition_addr, int inActivationMode);

    public void SetPosition(RVec3 inPosition) {
        internal_native_SetPosition(native_address, inPosition.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.SetPosition(inPosition_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inPosition_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.SetPosition(inPosition_addr);")
    public static native void internal_native_SetPosition(int this_addr, int inPosition_addr);

    public Quat GetRotation(boolean inLockBodies) {
        int pointer = internal_native_GetRotation(native_address, inLockBodies);
        if (pointer == 0)
            return Quat.NULL;
        if (Quat_TEMP_GEN_0 == null)
            Quat_TEMP_GEN_0 = Quat.native_new();
        Quat_TEMP_GEN_0.internal_reset(pointer, false);
        return Quat_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
var returnedJSObj = jsObj.GetRotation(inLockBodies);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);var returnedJSObj = jsObj.GetRotation(inLockBodies);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetRotation(int this_addr, boolean inLockBodies);

    public Quat GetRotation() {
        int pointer = internal_native_GetRotation(native_address);
        if (pointer == 0)
            return Quat.NULL;
        if (Quat_TEMP_GEN_1 == null)
            Quat_TEMP_GEN_1 = Quat.native_new();
        Quat_TEMP_GEN_1.internal_reset(pointer, false);
        return Quat_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
var returnedJSObj = jsObj.GetRotation();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);var returnedJSObj = jsObj.GetRotation();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetRotation(int this_addr);

    public void SetRotation(Quat inRotation, EActivation inActivationMode, boolean inLockBodies) {
        internal_native_SetRotation(native_address, inRotation.native_address, (int) inActivationMode.getValue(), inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.SetRotation(inRotation_addr, inActivationMode, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inRotation_addr", "inActivationMode", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.SetRotation(inRotation_addr, inActivationMode, inLockBodies);")
    public static native void internal_native_SetRotation(int this_addr, int inRotation_addr, int inActivationMode, boolean inLockBodies);

    public void SetRotation(Quat inRotation, EActivation inActivationMode) {
        internal_native_SetRotation(native_address, inRotation.native_address, (int) inActivationMode.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.SetRotation(inRotation_addr, inActivationMode);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inRotation_addr", "inActivationMode"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.SetRotation(inRotation_addr, inActivationMode);")
    public static native void internal_native_SetRotation(int this_addr, int inRotation_addr, int inActivationMode);

    public void SetRotation(Quat inRotation) {
        internal_native_SetRotation(native_address, inRotation.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.SetRotation(inRotation_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inRotation_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.SetRotation(inRotation_addr);")
    public static native void internal_native_SetRotation(int this_addr, int inRotation_addr);

    public RVec3 GetCenterOfMassPosition(boolean inLockBodies) {
        int pointer = internal_native_GetCenterOfMassPosition(native_address, inLockBodies);
        if (pointer == 0)
            return RVec3.NULL;
        if (RVec3_TEMP_GEN_2 == null)
            RVec3_TEMP_GEN_2 = RVec3.native_new();
        RVec3_TEMP_GEN_2.internal_reset(pointer, false);
        return RVec3_TEMP_GEN_2;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
var returnedJSObj = jsObj.GetCenterOfMassPosition(inLockBodies);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);var returnedJSObj = jsObj.GetCenterOfMassPosition(inLockBodies);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetCenterOfMassPosition(int this_addr, boolean inLockBodies);

    public RVec3 GetCenterOfMassPosition() {
        int pointer = internal_native_GetCenterOfMassPosition(native_address);
        if (pointer == 0)
            return RVec3.NULL;
        if (RVec3_TEMP_GEN_3 == null)
            RVec3_TEMP_GEN_3 = RVec3.native_new();
        RVec3_TEMP_GEN_3.internal_reset(pointer, false);
        return RVec3_TEMP_GEN_3;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
var returnedJSObj = jsObj.GetCenterOfMassPosition();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);var returnedJSObj = jsObj.GetCenterOfMassPosition();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetCenterOfMassPosition(int this_addr);

    public RMat44 GetWorldTransform(boolean inLockBodies) {
        int pointer = internal_native_GetWorldTransform(native_address, inLockBodies);
        if (pointer == 0)
            return RMat44.NULL;
        if (RMat44_TEMP_GEN_0 == null)
            RMat44_TEMP_GEN_0 = RMat44.native_new();
        RMat44_TEMP_GEN_0.internal_reset(pointer, false);
        return RMat44_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
var returnedJSObj = jsObj.GetWorldTransform(inLockBodies);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);var returnedJSObj = jsObj.GetWorldTransform(inLockBodies);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetWorldTransform(int this_addr, boolean inLockBodies);

    public RMat44 GetWorldTransform() {
        int pointer = internal_native_GetWorldTransform(native_address);
        if (pointer == 0)
            return RMat44.NULL;
        if (RMat44_TEMP_GEN_1 == null)
            RMat44_TEMP_GEN_1 = RMat44.native_new();
        RMat44_TEMP_GEN_1.internal_reset(pointer, false);
        return RMat44_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
var returnedJSObj = jsObj.GetWorldTransform();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);var returnedJSObj = jsObj.GetWorldTransform();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetWorldTransform(int this_addr);

    public int GetLayer() {
        return internal_native_GetLayer(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
var returnedJSObj = jsObj.GetLayer();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);var returnedJSObj = jsObj.GetLayer();return returnedJSObj;")
    public static native int internal_native_GetLayer(int this_addr);

    public void SetLayer(int inLayer, boolean inLockBodies) {
        internal_native_SetLayer(native_address, inLayer, inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.SetLayer(inLayer, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLayer", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.SetLayer(inLayer, inLockBodies);")
    public static native void internal_native_SetLayer(int this_addr, int inLayer, boolean inLockBodies);

    public void SetLayer(int inLayer) {
        internal_native_SetLayer(native_address, inLayer);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.SetLayer(inLayer);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLayer"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.SetLayer(inLayer);")
    public static native void internal_native_SetLayer(int this_addr, int inLayer);

    public boolean SetShape(Shape inShape, float inMaxPenetrationDepth, boolean inLockBodies) {
        return internal_native_SetShape(native_address, inShape.native_address, inMaxPenetrationDepth, inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
var returnedJSObj = jsObj.SetShape(inShape_addr, inMaxPenetrationDepth, inLockBodies);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inShape_addr", "inMaxPenetrationDepth", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);var returnedJSObj = jsObj.SetShape(inShape_addr, inMaxPenetrationDepth, inLockBodies);return returnedJSObj;")
    public static native boolean internal_native_SetShape(int this_addr, int inShape_addr, float inMaxPenetrationDepth, boolean inLockBodies);

    public boolean SetShape(Shape inShape, float inMaxPenetrationDepth) {
        return internal_native_SetShape(native_address, inShape.native_address, inMaxPenetrationDepth);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
var returnedJSObj = jsObj.SetShape(inShape_addr, inMaxPenetrationDepth);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inShape_addr", "inMaxPenetrationDepth"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);var returnedJSObj = jsObj.SetShape(inShape_addr, inMaxPenetrationDepth);return returnedJSObj;")
    public static native boolean internal_native_SetShape(int this_addr, int inShape_addr, float inMaxPenetrationDepth);

    public TransformedShape GetTransformedShape(boolean inLockBodies) {
        int pointer = internal_native_GetTransformedShape(native_address, inLockBodies);
        if (pointer == 0)
            return TransformedShape.NULL;
        if (TransformedShape_TEMP_GEN_0 == null)
            TransformedShape_TEMP_GEN_0 = TransformedShape.native_new();
        TransformedShape_TEMP_GEN_0.internal_reset(pointer, false);
        return TransformedShape_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
var returnedJSObj = jsObj.GetTransformedShape(inLockBodies);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);var returnedJSObj = jsObj.GetTransformedShape(inLockBodies);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetTransformedShape(int this_addr, boolean inLockBodies);

    public TransformedShape GetTransformedShape() {
        int pointer = internal_native_GetTransformedShape(native_address);
        if (pointer == 0)
            return TransformedShape.NULL;
        if (TransformedShape_TEMP_GEN_1 == null)
            TransformedShape_TEMP_GEN_1 = TransformedShape.native_new();
        TransformedShape_TEMP_GEN_1.internal_reset(pointer, false);
        return TransformedShape_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
var returnedJSObj = jsObj.GetTransformedShape();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);var returnedJSObj = jsObj.GetTransformedShape();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetTransformedShape(int this_addr);

    public void CheckCollision(RVec3 inPosition, Quat inRotation, Vec3 inMovementDirection, float inMaxSeparationDistance, Shape inShape, RVec3 inBaseOffset, CollideShapeCollector ioCollector, boolean inLockBodies) {
        internal_native_CheckCollision(native_address, inPosition.native_address, inRotation.native_address, inMovementDirection.native_address, inMaxSeparationDistance, inShape.native_address, inBaseOffset.native_address, ioCollector.native_address, inLockBodies);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.CheckCollision(inPosition_addr, inRotation_addr, inMovementDirection_addr, inMaxSeparationDistance, inShape_addr, inBaseOffset_addr, ioCollector_addr, inLockBodies);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inPosition_addr", "inRotation_addr", "inMovementDirection_addr", "inMaxSeparationDistance", "inShape_addr", "inBaseOffset_addr", "ioCollector_addr", "inLockBodies"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.CheckCollision(inPosition_addr, inRotation_addr, inMovementDirection_addr, inMaxSeparationDistance, inShape_addr, inBaseOffset_addr, ioCollector_addr, inLockBodies);")
    public static native void internal_native_CheckCollision(int this_addr, int inPosition_addr, int inRotation_addr, int inMovementDirection_addr, float inMaxSeparationDistance, int inShape_addr, int inBaseOffset_addr, int ioCollector_addr, boolean inLockBodies);

    public void CheckCollision(RVec3 inPosition, Quat inRotation, Vec3 inMovementDirection, float inMaxSeparationDistance, Shape inShape, RVec3 inBaseOffset, CollideShapeCollector ioCollector) {
        internal_native_CheckCollision(native_address, inPosition.native_address, inRotation.native_address, inMovementDirection.native_address, inMaxSeparationDistance, inShape.native_address, inBaseOffset.native_address, ioCollector.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.Character);
jsObj.CheckCollision(inPosition_addr, inRotation_addr, inMovementDirection_addr, inMaxSeparationDistance, inShape_addr, inBaseOffset_addr, ioCollector_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inPosition_addr", "inRotation_addr", "inMovementDirection_addr", "inMaxSeparationDistance", "inShape_addr", "inBaseOffset_addr", "ioCollector_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.Character);jsObj.CheckCollision(inPosition_addr, inRotation_addr, inMovementDirection_addr, inMaxSeparationDistance, inShape_addr, inBaseOffset_addr, ioCollector_addr);")
    public static native void internal_native_CheckCollision(int this_addr, int inPosition_addr, int inRotation_addr, int inMovementDirection_addr, float inMaxSeparationDistance, int inShape_addr, int inBaseOffset_addr, int ioCollector_addr);
}
