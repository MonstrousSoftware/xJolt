/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.collision.shape;

import gen.jolt.idl.IDLBase;
import gen.jolt.physics.body.BodyID;

public class SubShapeIDPair extends IDLBase {

    private BodyID BodyID_TEMP_GEN_0;

    private SubShapeID SubShapeID_TEMP_GEN_0;

    private BodyID BodyID_TEMP_GEN_1;

    private SubShapeID SubShapeID_TEMP_GEN_1;

    static public final SubShapeIDPair NULL = SubShapeIDPair.native_new();

    static public final SubShapeIDPair T_01 = SubShapeIDPair.native_new();

    static public final SubShapeIDPair T_02 = SubShapeIDPair.native_new();

    static public final SubShapeIDPair T_03 = SubShapeIDPair.native_new();

    public SubShapeIDPair() {
        int addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.SubShapeIDPair();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.SubShapeIDPair();return jolt.getPointer(jsObj);")
    public static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected SubShapeIDPair(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static SubShapeIDPair native_new() {
        return new SubShapeIDPair((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SubShapeIDPair);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SubShapeIDPair);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public BodyID GetBody1ID() {
        int pointer = internal_native_GetBody1ID(native_address);
        if (pointer == 0)
            return BodyID.NULL;
        if (BodyID_TEMP_GEN_0 == null)
            BodyID_TEMP_GEN_0 = BodyID.native_new();
        BodyID_TEMP_GEN_0.internal_reset(pointer, false);
        return BodyID_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SubShapeIDPair);
var returnedJSObj = jsObj.GetBody1ID();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SubShapeIDPair);var returnedJSObj = jsObj.GetBody1ID();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetBody1ID(int this_addr);

    public SubShapeID GetSubShapeID1() {
        int pointer = internal_native_GetSubShapeID1(native_address);
        if (pointer == 0)
            return SubShapeID.NULL;
        if (SubShapeID_TEMP_GEN_0 == null)
            SubShapeID_TEMP_GEN_0 = SubShapeID.native_new();
        SubShapeID_TEMP_GEN_0.internal_reset(pointer, false);
        return SubShapeID_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SubShapeIDPair);
var returnedJSObj = jsObj.GetSubShapeID1();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SubShapeIDPair);var returnedJSObj = jsObj.GetSubShapeID1();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetSubShapeID1(int this_addr);

    public BodyID GetBody2ID() {
        int pointer = internal_native_GetBody2ID(native_address);
        if (pointer == 0)
            return BodyID.NULL;
        if (BodyID_TEMP_GEN_1 == null)
            BodyID_TEMP_GEN_1 = BodyID.native_new();
        BodyID_TEMP_GEN_1.internal_reset(pointer, false);
        return BodyID_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SubShapeIDPair);
var returnedJSObj = jsObj.GetBody2ID();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SubShapeIDPair);var returnedJSObj = jsObj.GetBody2ID();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetBody2ID(int this_addr);

    public SubShapeID GetSubShapeID2() {
        int pointer = internal_native_GetSubShapeID2(native_address);
        if (pointer == 0)
            return SubShapeID.NULL;
        if (SubShapeID_TEMP_GEN_1 == null)
            SubShapeID_TEMP_GEN_1 = SubShapeID.native_new();
        SubShapeID_TEMP_GEN_1.internal_reset(pointer, false);
        return SubShapeID_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SubShapeIDPair);
var returnedJSObj = jsObj.GetSubShapeID2();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SubShapeIDPair);var returnedJSObj = jsObj.GetSubShapeID2();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetSubShapeID2(int this_addr);
}
