/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.softbody;

import gen.jolt.physics.body.Body;

public class SoftBodyContactListenerEm extends SoftBodyContactListener {

    static private Body Body_TEMP_STATIC_GEN_0;

    static private Body Body_TEMP_STATIC_GEN_1;

    static private SoftBodyContactSettings SoftBodyContactSettings_TEMP_STATIC_GEN_0;

    static private Body Body_TEMP_STATIC_GEN_2;

    static private SoftBodyManifold SoftBodyManifold_TEMP_STATIC_GEN_0;

    static public final SoftBodyContactListenerEm NULL = SoftBodyContactListenerEm.native_new();

    static public final SoftBodyContactListenerEm T_01 = SoftBodyContactListenerEm.native_new();

    static public final SoftBodyContactListenerEm T_02 = SoftBodyContactListenerEm.native_new();

    static public final SoftBodyContactListenerEm T_03 = SoftBodyContactListenerEm.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected SoftBodyContactListenerEm(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static SoftBodyContactListenerEm native_new() {
        return new SoftBodyContactListenerEm((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyContactListenerJS);
jolt.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.SoftBodyContactListenerJS);jolt.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public SoftBodyContactListenerEm() {
        super((byte) 1, (char) 1);
        int addr = internal_native_create();
        internal_reset(addr, true);
        setupCallback();
    }

    private void setupCallback() {
        OnSoftBodyContactValidate OnSoftBodyContactValidate = new OnSoftBodyContactValidate() {

            public int OnSoftBodyContactValidate(int inSoftBody_addr, int inOtherBody_addr, int ioSettings_addr) {
                return internal_OnSoftBodyContactValidate(inSoftBody_addr, inOtherBody_addr, ioSettings_addr);
            }
        };
        OnSoftBodyContactAdded OnSoftBodyContactAdded = new OnSoftBodyContactAdded() {

            public void OnSoftBodyContactAdded(int inSoftBody_addr, int inManifold_addr) {
                internal_OnSoftBodyContactAdded(inSoftBody_addr, inManifold_addr);
            }
        };
        internal_native_setupCallback(native_address, OnSoftBodyContactValidate, OnSoftBodyContactAdded);
    }

    protected int OnSoftBodyContactValidate(Body inSoftBody, Body inOtherBody, SoftBodyContactSettings ioSettings) {
        return 0;
    }

    private int internal_OnSoftBodyContactValidate(int inSoftBody_addr, int inOtherBody_addr, int ioSettings_addr) {
        if (Body_TEMP_STATIC_GEN_0 == null)
            Body_TEMP_STATIC_GEN_0 = Body.native_new();
        Body_TEMP_STATIC_GEN_0.internal_reset(inSoftBody_addr, false);
        if (Body_TEMP_STATIC_GEN_1 == null)
            Body_TEMP_STATIC_GEN_1 = Body.native_new();
        Body_TEMP_STATIC_GEN_1.internal_reset(inOtherBody_addr, false);
        if (SoftBodyContactSettings_TEMP_STATIC_GEN_0 == null)
            SoftBodyContactSettings_TEMP_STATIC_GEN_0 = SoftBodyContactSettings.native_new();
        SoftBodyContactSettings_TEMP_STATIC_GEN_0.internal_reset(ioSettings_addr, false);
        return OnSoftBodyContactValidate(Body_TEMP_STATIC_GEN_0, Body_TEMP_STATIC_GEN_1, SoftBodyContactSettings_TEMP_STATIC_GEN_0);
    }

    protected void OnSoftBodyContactAdded(Body inSoftBody, SoftBodyManifold inManifold) {
    }

    private void internal_OnSoftBodyContactAdded(int inSoftBody_addr, int inManifold_addr) {
        if (Body_TEMP_STATIC_GEN_2 == null)
            Body_TEMP_STATIC_GEN_2 = Body.native_new();
        Body_TEMP_STATIC_GEN_2.internal_reset(inSoftBody_addr, false);
        if (SoftBodyManifold_TEMP_STATIC_GEN_0 == null)
            SoftBodyManifold_TEMP_STATIC_GEN_0 = SoftBodyManifold.native_new();
        SoftBodyManifold_TEMP_STATIC_GEN_0.internal_reset(inManifold_addr, false);
        OnSoftBodyContactAdded(Body_TEMP_STATIC_GEN_2, SoftBodyManifold_TEMP_STATIC_GEN_0);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.SoftBodyContactListenerJS();
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new jolt.SoftBodyContactListenerJS();return jolt.getPointer(jsObj);")
    public static native int internal_native_create();

    @org.teavm.jso.JSBody(params = { "this_addr", "OnSoftBodyContactValidate", "OnSoftBodyContactAdded" }, script = "var SoftBodyContactListenerJS = jolt.wrapPointer(this_addr, jolt.SoftBodyContactListenerJS); SoftBodyContactListenerJS.OnSoftBodyContactValidate = OnSoftBodyContactValidate; SoftBodyContactListenerJS.OnSoftBodyContactAdded = OnSoftBodyContactAdded;")
    public static native void internal_native_setupCallback(int this_addr, OnSoftBodyContactValidate OnSoftBodyContactValidate, OnSoftBodyContactAdded OnSoftBodyContactAdded);

    @org.teavm.jso.JSFunctor()
    public interface OnSoftBodyContactValidate extends org.teavm.jso.JSObject {

        int OnSoftBodyContactValidate(int inSoftBody_addr, int inOtherBody_addr, int ioSettings_addr);
    }

    @org.teavm.jso.JSFunctor()
    public interface OnSoftBodyContactAdded extends org.teavm.jso.JSObject {

        void OnSoftBodyContactAdded(int inSoftBody_addr, int inManifold_addr);
    }
}
