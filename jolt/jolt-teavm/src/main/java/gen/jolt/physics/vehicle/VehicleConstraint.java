/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.jolt.physics.vehicle;

import gen.jolt.physics.constraints.Constraint;
import gen.jolt.physics.body.Body;
import gen.jolt.math.Vec3;
import gen.jolt.math.Mat44;

public class VehicleConstraint extends Constraint {

    private Vec3 Vec3_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_1;

    private Vec3 Vec3_TEMP_GEN_2;

    private Vec3 Vec3_TEMP_GEN_3;

    private Body Body_TEMP_GEN_0;

    private VehicleController VehicleController_TEMP_GEN_0;

    private Wheels Wheels_TEMP_GEN_0;

    private Wheel Wheel_TEMP_GEN_0;

    private Mat44 Mat44_TEMP_GEN_0;

    private Mat44 Mat44_TEMP_GEN_1;

    private ArrayVehicleAntiRollBar ArrayVehicleAntiRollBar_TEMP_GEN_0;

    static public final VehicleConstraint NULL = VehicleConstraint.native_new();

    static public final VehicleConstraint T_01 = VehicleConstraint.native_new();

    static public final VehicleConstraint T_02 = VehicleConstraint.native_new();

    static public final VehicleConstraint T_03 = VehicleConstraint.native_new();

    public VehicleConstraint(Body inVehicleBody, VehicleConstraintSettings inSettings) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_Body_VehicleConstraintSettings(inVehicleBody.native_address, inSettings.native_address);
        internal_reset(addr, false);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new jolt.VehicleConstraint(inVehicleBody_addr, inSettings_addr);
return jolt.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"inVehicleBody_addr", "inSettings_addr"}, script = "var jsObj = new jolt.VehicleConstraint(inVehicleBody_addr, inSettings_addr);return jolt.getPointer(jsObj);")
    public static native int internal_native_create_Body_VehicleConstraintSettings(int inVehicleBody_addr, int inSettings_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected VehicleConstraint(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static VehicleConstraint native_new() {
        return new VehicleConstraint((byte) 0, (char) 0);
    }

    public void SetMaxPitchRollAngle(float inMaxPitchRollAngle) {
        internal_native_SetMaxPitchRollAngle(native_address, inMaxPitchRollAngle);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);
jsObj.SetMaxPitchRollAngle(inMaxPitchRollAngle);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inMaxPitchRollAngle"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);jsObj.SetMaxPitchRollAngle(inMaxPitchRollAngle);")
    public static native void internal_native_SetMaxPitchRollAngle(int this_addr, float inMaxPitchRollAngle);

    public void SetVehicleCollisionTester(VehicleCollisionTester inTester) {
        internal_native_SetVehicleCollisionTester(native_address, inTester.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);
jsObj.SetVehicleCollisionTester(inTester_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inTester_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);jsObj.SetVehicleCollisionTester(inTester_addr);")
    public static native void internal_native_SetVehicleCollisionTester(int this_addr, int inTester_addr);

    public void OverrideGravity(Vec3 inGravity) {
        internal_native_OverrideGravity(native_address, inGravity.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);
jsObj.OverrideGravity(inGravity_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inGravity_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);jsObj.OverrideGravity(inGravity_addr);")
    public static native void internal_native_OverrideGravity(int this_addr, int inGravity_addr);

    public boolean IsGravityOverridden() {
        return internal_native_IsGravityOverridden(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);
var returnedJSObj = jsObj.IsGravityOverridden();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);var returnedJSObj = jsObj.IsGravityOverridden();return returnedJSObj;")
    public static native boolean internal_native_IsGravityOverridden(int this_addr);

    public Vec3 GetGravityOverride() {
        int pointer = internal_native_GetGravityOverride(native_address);
        if (pointer == 0)
            return Vec3.NULL;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = Vec3.native_new();
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);
var returnedJSObj = jsObj.GetGravityOverride();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);var returnedJSObj = jsObj.GetGravityOverride();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetGravityOverride(int this_addr);

    public void ResetGravityOverride() {
        internal_native_ResetGravityOverride(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);
jsObj.ResetGravityOverride();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);jsObj.ResetGravityOverride();")
    public static native void internal_native_ResetGravityOverride(int this_addr);

    public Vec3 GetLocalUp() {
        int pointer = internal_native_GetLocalUp(native_address);
        if (pointer == 0)
            return Vec3.NULL;
        if (Vec3_TEMP_GEN_1 == null)
            Vec3_TEMP_GEN_1 = Vec3.native_new();
        Vec3_TEMP_GEN_1.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);
var returnedJSObj = jsObj.GetLocalUp();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);var returnedJSObj = jsObj.GetLocalUp();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetLocalUp(int this_addr);

    public Vec3 GetLocalForward() {
        int pointer = internal_native_GetLocalForward(native_address);
        if (pointer == 0)
            return Vec3.NULL;
        if (Vec3_TEMP_GEN_2 == null)
            Vec3_TEMP_GEN_2 = Vec3.native_new();
        Vec3_TEMP_GEN_2.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_2;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);
var returnedJSObj = jsObj.GetLocalForward();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);var returnedJSObj = jsObj.GetLocalForward();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetLocalForward(int this_addr);

    public Vec3 GetWorldUp() {
        int pointer = internal_native_GetWorldUp(native_address);
        if (pointer == 0)
            return Vec3.NULL;
        if (Vec3_TEMP_GEN_3 == null)
            Vec3_TEMP_GEN_3 = Vec3.native_new();
        Vec3_TEMP_GEN_3.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_3;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);
var returnedJSObj = jsObj.GetWorldUp();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);var returnedJSObj = jsObj.GetWorldUp();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetWorldUp(int this_addr);

    public Body GetVehicleBody() {
        int pointer = internal_native_GetVehicleBody(native_address);
        if (pointer == 0)
            return Body.NULL;
        if (Body_TEMP_GEN_0 == null)
            Body_TEMP_GEN_0 = Body.native_new();
        Body_TEMP_GEN_0.internal_reset(pointer, false);
        return Body_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);
var returnedJSObj = jsObj.GetVehicleBody();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);var returnedJSObj = jsObj.GetVehicleBody();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetVehicleBody(int this_addr);

    public VehicleController GetController() {
        int pointer = internal_native_GetController(native_address);
        if (pointer == 0)
            return VehicleController.NULL;
        if (VehicleController_TEMP_GEN_0 == null)
            VehicleController_TEMP_GEN_0 = VehicleController.native_new();
        VehicleController_TEMP_GEN_0.internal_reset(pointer, false);
        return VehicleController_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);
var returnedJSObj = jsObj.GetController();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);var returnedJSObj = jsObj.GetController();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetController(int this_addr);

    public Wheels GetWheels() {
        int pointer = internal_native_GetWheels(native_address);
        if (pointer == 0)
            return Wheels.NULL;
        if (Wheels_TEMP_GEN_0 == null)
            Wheels_TEMP_GEN_0 = Wheels.native_new();
        Wheels_TEMP_GEN_0.internal_reset(pointer, false);
        return Wheels_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);
var returnedJSObj = jsObj.GetWheels();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);var returnedJSObj = jsObj.GetWheels();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetWheels(int this_addr);

    public Wheel GetWheel(int inIdx) {
        int pointer = internal_native_GetWheel(native_address, inIdx);
        if (pointer == 0)
            return Wheel.NULL;
        if (Wheel_TEMP_GEN_0 == null)
            Wheel_TEMP_GEN_0 = Wheel.native_new();
        Wheel_TEMP_GEN_0.internal_reset(pointer, false);
        return Wheel_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);
var returnedJSObj = jsObj.GetWheel(inIdx);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inIdx"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);var returnedJSObj = jsObj.GetWheel(inIdx);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetWheel(int this_addr, int inIdx);

    public Mat44 GetWheelLocalTransform(int inWheelIndex, Vec3 inWheelRight, Vec3 inWheelUp) {
        int pointer = internal_native_GetWheelLocalTransform(native_address, inWheelIndex, inWheelRight.native_address, inWheelUp.native_address);
        if (pointer == 0)
            return Mat44.NULL;
        if (Mat44_TEMP_GEN_0 == null)
            Mat44_TEMP_GEN_0 = Mat44.native_new();
        Mat44_TEMP_GEN_0.internal_reset(pointer, false);
        return Mat44_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);
var returnedJSObj = jsObj.GetWheelLocalTransform(inWheelIndex, inWheelRight_addr, inWheelUp_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inWheelIndex", "inWheelRight_addr", "inWheelUp_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);var returnedJSObj = jsObj.GetWheelLocalTransform(inWheelIndex, inWheelRight_addr, inWheelUp_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetWheelLocalTransform(int this_addr, int inWheelIndex, int inWheelRight_addr, int inWheelUp_addr);

    public Mat44 GetWheelWorldTransform(int inWheelIndex, Vec3 inWheelRight, Vec3 inWheelUp) {
        int pointer = internal_native_GetWheelWorldTransform(native_address, inWheelIndex, inWheelRight.native_address, inWheelUp.native_address);
        if (pointer == 0)
            return Mat44.NULL;
        if (Mat44_TEMP_GEN_1 == null)
            Mat44_TEMP_GEN_1 = Mat44.native_new();
        Mat44_TEMP_GEN_1.internal_reset(pointer, false);
        return Mat44_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);
var returnedJSObj = jsObj.GetWheelWorldTransform(inWheelIndex, inWheelRight_addr, inWheelUp_addr);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inWheelIndex", "inWheelRight_addr", "inWheelUp_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);var returnedJSObj = jsObj.GetWheelWorldTransform(inWheelIndex, inWheelRight_addr, inWheelUp_addr);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetWheelWorldTransform(int this_addr, int inWheelIndex, int inWheelRight_addr, int inWheelUp_addr);

    public ArrayVehicleAntiRollBar GetAntiRollBars() {
        int pointer = internal_native_GetAntiRollBars(native_address);
        if (pointer == 0)
            return ArrayVehicleAntiRollBar.NULL;
        if (ArrayVehicleAntiRollBar_TEMP_GEN_0 == null)
            ArrayVehicleAntiRollBar_TEMP_GEN_0 = ArrayVehicleAntiRollBar.native_new();
        ArrayVehicleAntiRollBar_TEMP_GEN_0.internal_reset(pointer, false);
        return ArrayVehicleAntiRollBar_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);
var returnedJSObj = jsObj.GetAntiRollBars();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return jolt.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);var returnedJSObj = jsObj.GetAntiRollBars();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return jolt.getPointer(returnedJSObj);")
    public static native int internal_native_GetAntiRollBars(int this_addr);

    public void SetNumStepsBetweenCollisionTestActive(int inSteps) {
        internal_native_SetNumStepsBetweenCollisionTestActive(native_address, inSteps);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);
jsObj.SetNumStepsBetweenCollisionTestActive(inSteps);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inSteps"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);jsObj.SetNumStepsBetweenCollisionTestActive(inSteps);")
    public static native void internal_native_SetNumStepsBetweenCollisionTestActive(int this_addr, int inSteps);

    public int GetNumStepsBetweenCollisionTestActive() {
        return internal_native_GetNumStepsBetweenCollisionTestActive(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);
var returnedJSObj = jsObj.GetNumStepsBetweenCollisionTestActive();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);var returnedJSObj = jsObj.GetNumStepsBetweenCollisionTestActive();return returnedJSObj;")
    public static native int internal_native_GetNumStepsBetweenCollisionTestActive(int this_addr);

    public void SetNumStepsBetweenCollisionTestInactive(int inSteps) {
        internal_native_SetNumStepsBetweenCollisionTestInactive(native_address, inSteps);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);
jsObj.SetNumStepsBetweenCollisionTestInactive(inSteps);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "inSteps"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);jsObj.SetNumStepsBetweenCollisionTestInactive(inSteps);")
    public static native void internal_native_SetNumStepsBetweenCollisionTestInactive(int this_addr, int inSteps);

    public int GetNumStepsBetweenCollisionTestInactive() {
        return internal_native_GetNumStepsBetweenCollisionTestInactive(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);
var returnedJSObj = jsObj.GetNumStepsBetweenCollisionTestInactive();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = jolt.wrapPointer(this_addr, jolt.VehicleConstraint);var returnedJSObj = jsObj.GetNumStepsBetweenCollisionTestInactive();return returnedJSObj;")
    public static native int internal_native_GetNumStepsBetweenCollisionTestInactive(int this_addr);
}
