/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.core;

public class TempAllocatorImpl extends TempAllocator {

    static public final TempAllocatorImpl NULL = TempAllocatorImpl.native_new();

    public TempAllocatorImpl(int size) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_int(size);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new TempAllocatorImpl((int)size);
*/
    public static native long internal_native_create_int(int size);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected TempAllocatorImpl(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static TempAllocatorImpl native_new() {
        return new TempAllocatorImpl((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
TempAllocatorImpl* nativeObject = (TempAllocatorImpl*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);
}
