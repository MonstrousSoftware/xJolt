/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.skeleton;

import jolt.idl.IDLBase;

public class SkeletalAnimation extends IDLBase {

    private ArraySkeletonAnimatedJoint ArraySkeletonAnimatedJoint_TEMP_GEN_0;

    static public final SkeletalAnimation NULL = SkeletalAnimation.native_new();

    public SkeletalAnimation() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new SkeletalAnimation();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected SkeletalAnimation(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static SkeletalAnimation native_new() {
        return new SkeletalAnimation((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
SkeletalAnimation* nativeObject = (SkeletalAnimation*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public float GetDuration() {
        return internal_native_GetDuration(native_address);
    }

    /*[-JNI;-NATIVE]
SkeletalAnimation* nativeObject = (SkeletalAnimation*)this_addr;
return nativeObject->GetDuration();
*/
    public static native float internal_native_GetDuration(long this_addr);

    public void ScaleJoints(float inScale) {
        internal_native_ScaleJoints(native_address, inScale);
    }

    /*[-JNI;-NATIVE]
SkeletalAnimation* nativeObject = (SkeletalAnimation*)this_addr;
nativeObject->ScaleJoints((float)inScale);
*/
    public static native void internal_native_ScaleJoints(long this_addr, float inScale);

    public void Sample(float inTime, SkeletonPose ioPose) {
        internal_native_Sample(native_address, inTime, ioPose.native_address);
    }

    /*[-JNI;-NATIVE]
SkeletalAnimation* nativeObject = (SkeletalAnimation*)this_addr;
nativeObject->Sample((float)inTime, *((SkeletonPose* )ioPose_addr));
*/
    public static native void internal_native_Sample(long this_addr, float inTime, long ioPose_addr);

    public ArraySkeletonAnimatedJoint GetAnimatedJoints() {
        long pointer = internal_native_GetAnimatedJoints(native_address);
        if (pointer == 0)
            return ArraySkeletonAnimatedJoint.NULL;
        if (ArraySkeletonAnimatedJoint_TEMP_GEN_0 == null)
            ArraySkeletonAnimatedJoint_TEMP_GEN_0 = ArraySkeletonAnimatedJoint.native_new();
        ArraySkeletonAnimatedJoint_TEMP_GEN_0.internal_reset(pointer, false);
        return ArraySkeletonAnimatedJoint_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
SkeletalAnimation* nativeObject = (SkeletalAnimation*)this_addr;
return (jlong)&nativeObject->GetAnimatedJoints();
*/
    public static native long internal_native_GetAnimatedJoints(long this_addr);
}
