/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.renderer;

import jolt.idl.IDLBase;

public class DebugRendererTriangle extends IDLBase {

    private DebugRendererVertex DebugRendererVertex_TEMP_GEN_0;

    static public final DebugRendererTriangle NULL = DebugRendererTriangle.native_new();

    static public final DebugRendererTriangle T_01 = DebugRendererTriangle.native_new();

    static public final DebugRendererTriangle T_02 = DebugRendererTriangle.native_new();

    static public final DebugRendererTriangle T_03 = DebugRendererTriangle.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected DebugRendererTriangle(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static DebugRendererTriangle native_new() {
        return new DebugRendererTriangle((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
DebugRendererTriangle* nativeObject = (DebugRendererTriangle*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public DebugRendererVertex get_mV(int index) {
        long pointer = internal_native_get_mV(native_address, index);
        if (pointer == 0)
            return DebugRendererVertex.NULL;
        if (DebugRendererVertex_TEMP_GEN_0 == null)
            DebugRendererVertex_TEMP_GEN_0 = DebugRendererVertex.native_new();
        DebugRendererVertex_TEMP_GEN_0.internal_reset(pointer, false);
        return DebugRendererVertex_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
DebugRendererTriangle* nativeObject = (DebugRendererTriangle*)this_addr;
return (jlong)&nativeObject->mV[index];
*/
    public static native long internal_native_get_mV(long this_addr, int index);

    public void set_mV(int index, DebugRendererVertex mV) {
        internal_native_set_mV(native_address, index, mV.native_address);
    }

    /*[-JNI;-NATIVE]
DebugRendererTriangle* nativeObject = (DebugRendererTriangle*)this_addr;
nativeObject->mV[index] = *((DebugRendererVertex*)mV_addr);
*/
    public static native void internal_native_set_mV(long this_addr, int index, long mV_addr);
}
