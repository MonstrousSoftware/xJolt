/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics;

import jolt.idl.IDLBase;

public class StateRecorder extends IDLBase {

    static public final StateRecorder NULL = StateRecorder.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected StateRecorder(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static StateRecorder native_new() {
        return new StateRecorder((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
StateRecorder* nativeObject = (StateRecorder*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void SetValidating(boolean inValidating) {
        internal_native_SetValidating(native_address, inValidating);
    }

    /*[-JNI;-NATIVE]
StateRecorder* nativeObject = (StateRecorder*)this_addr;
nativeObject->SetValidating(inValidating);
*/
    public static native void internal_native_SetValidating(long this_addr, boolean inValidating);

    public boolean IsValidating() {
        return internal_native_IsValidating(native_address);
    }

    /*[-JNI;-NATIVE]
StateRecorder* nativeObject = (StateRecorder*)this_addr;
return nativeObject->IsValidating();
*/
    public static native boolean internal_native_IsValidating(long this_addr);
}
