/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.character;

import jolt.idl.IDLBase;
import jolt.physics.body.Body;
import jolt.math.Vec3;
import jolt.physics.body.BodyID;
import jolt.physics.collision.shape.SubShapeID;
import jolt.RVec3;
import jolt.physics.collision.PhysicsMaterial;

public class CharacterContactListener extends IDLBase {

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_0;

    static private Body Body_TEMP_STATIC_GEN_0;

    static private Vec3 Vec3_TEMP_STATIC_GEN_0;

    static private Vec3 Vec3_TEMP_STATIC_GEN_1;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_1;

    static private BodyID BodyID_TEMP_STATIC_GEN_0;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_0;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_2;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_3;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_1;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_4;

    static private BodyID BodyID_TEMP_STATIC_GEN_1;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_2;

    static private RVec3 RVec3_TEMP_STATIC_GEN_0;

    static private Vec3 Vec3_TEMP_STATIC_GEN_2;

    static private CharacterContactSettings CharacterContactSettings_TEMP_STATIC_GEN_0;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_5;

    static private BodyID BodyID_TEMP_STATIC_GEN_2;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_3;

    static private RVec3 RVec3_TEMP_STATIC_GEN_1;

    static private Vec3 Vec3_TEMP_STATIC_GEN_3;

    static private CharacterContactSettings CharacterContactSettings_TEMP_STATIC_GEN_1;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_6;

    static private BodyID BodyID_TEMP_STATIC_GEN_3;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_4;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_7;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_8;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_5;

    static private RVec3 RVec3_TEMP_STATIC_GEN_2;

    static private Vec3 Vec3_TEMP_STATIC_GEN_4;

    static private CharacterContactSettings CharacterContactSettings_TEMP_STATIC_GEN_2;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_9;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_10;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_6;

    static private Vec3 Vec3_TEMP_STATIC_GEN_5;

    static private Vec3 Vec3_TEMP_STATIC_GEN_6;

    static private CharacterContactSettings CharacterContactSettings_TEMP_STATIC_GEN_3;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_11;

    static private CharacterID CharacterID_TEMP_STATIC_GEN_0;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_7;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_12;

    static private BodyID BodyID_TEMP_STATIC_GEN_4;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_8;

    static private RVec3 RVec3_TEMP_STATIC_GEN_3;

    static private Vec3 Vec3_TEMP_STATIC_GEN_7;

    static private Vec3 Vec3_TEMP_STATIC_GEN_8;

    static private PhysicsMaterial PhysicsMaterial_TEMP_STATIC_GEN_0;

    static private Vec3 Vec3_TEMP_STATIC_GEN_9;

    static private Vec3 Vec3_TEMP_STATIC_GEN_10;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_13;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_14;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_9;

    static private RVec3 RVec3_TEMP_STATIC_GEN_4;

    static private Vec3 Vec3_TEMP_STATIC_GEN_11;

    static private Vec3 Vec3_TEMP_STATIC_GEN_12;

    static private PhysicsMaterial PhysicsMaterial_TEMP_STATIC_GEN_1;

    static private Vec3 Vec3_TEMP_STATIC_GEN_13;

    static private Vec3 Vec3_TEMP_STATIC_GEN_14;

    static public final CharacterContactListener NULL = CharacterContactListener.native_new();

    /*[-JNI;-NATIVE]
class CharacterContactListenerImpl : public XJPH::CharacterContactListener {
private:
	JNIEnv* env;
	jobject obj;
public:
	inline static jclass jClassID = 0;
	inline static jmethodID OnAdjustBodyVelocity_customJJJJ_ID = 0;
	inline static jmethodID OnContactValidate_customJJJ_ID = 0;
	inline static jmethodID OnCharacterContactValidate_customJJJ_ID = 0;
	inline static jmethodID OnContactAdded_customJJJJJJ_ID = 0;
	inline static jmethodID OnContactPersisted_customJJJJJJ_ID = 0;
	inline static jmethodID OnContactRemoved_customJJJ_ID = 0;
	inline static jmethodID OnCharacterContactAdded_customJJJJJJ_ID = 0;
	inline static jmethodID OnCharacterContactPersisted_customJJJJJJ_ID = 0;
	inline static jmethodID OnCharacterContactRemoved_customJJJ_ID = 0;
	inline static jmethodID OnContactSolve_customJJJJJJJJJ_ID = 0;
	inline static jmethodID OnCharacterContactSolve_customJJJJJJJJJ_ID = 0;

void setupCallback(JNIEnv* env, jobject obj) {
	this->env = env;
	this->obj = env->NewGlobalRef(obj);
	if(CharacterContactListenerImpl::jClassID == 0) {
		CharacterContactListenerImpl::jClassID = (jclass)env->NewGlobalRef(env->GetObjectClass(obj));
		CharacterContactListenerImpl::OnAdjustBodyVelocity_customJJJJ_ID = env->GetMethodID(jClassID, "internal_OnAdjustBodyVelocity", "(JJJJ)V");
		CharacterContactListenerImpl::OnContactValidate_customJJJ_ID = env->GetMethodID(jClassID, "internal_OnContactValidate", "(JJJ)Z");
		CharacterContactListenerImpl::OnCharacterContactValidate_customJJJ_ID = env->GetMethodID(jClassID, "internal_OnCharacterContactValidate", "(JJJ)Z");
		CharacterContactListenerImpl::OnContactAdded_customJJJJJJ_ID = env->GetMethodID(jClassID, "internal_OnContactAdded", "(JJJJJJ)V");
		CharacterContactListenerImpl::OnContactPersisted_customJJJJJJ_ID = env->GetMethodID(jClassID, "internal_OnContactPersisted", "(JJJJJJ)V");
		CharacterContactListenerImpl::OnContactRemoved_customJJJ_ID = env->GetMethodID(jClassID, "internal_OnContactRemoved", "(JJJ)V");
		CharacterContactListenerImpl::OnCharacterContactAdded_customJJJJJJ_ID = env->GetMethodID(jClassID, "internal_OnCharacterContactAdded", "(JJJJJJ)V");
		CharacterContactListenerImpl::OnCharacterContactPersisted_customJJJJJJ_ID = env->GetMethodID(jClassID, "internal_OnCharacterContactPersisted", "(JJJJJJ)V");
		CharacterContactListenerImpl::OnCharacterContactRemoved_customJJJ_ID = env->GetMethodID(jClassID, "internal_OnCharacterContactRemoved", "(JJJ)V");
		CharacterContactListenerImpl::OnContactSolve_customJJJJJJJJJ_ID = env->GetMethodID(jClassID, "internal_OnContactSolve", "(JJJJJJJJJ)V");
		CharacterContactListenerImpl::OnCharacterContactSolve_customJJJJJJJJJ_ID = env->GetMethodID(jClassID, "internal_OnCharacterContactSolve", "(JJJJJJJJJ)V");
	}
}
virtual void OnAdjustBodyVelocity_custom(const CharacterVirtual* inCharacter, const Body& inBody2, Vec3& ioLinearVelocity, Vec3& ioAngularVelocity) {
   env->CallVoidMethod(obj, CharacterContactListenerImpl::OnAdjustBodyVelocity_customJJJJ_ID, (jlong)inCharacter, (jlong)&inBody2, (jlong)&ioLinearVelocity, (jlong)&ioAngularVelocity);
}
virtual bool OnContactValidate_custom(const CharacterVirtual* inCharacter, const BodyID& inBodyID2, const SubShapeID& inSubShapeID2) {
   return env->CallBooleanMethod(obj, CharacterContactListenerImpl::OnContactValidate_customJJJ_ID, (jlong)inCharacter, (jlong)&inBodyID2, (jlong)&inSubShapeID2);
}
virtual bool OnCharacterContactValidate_custom(const CharacterVirtual* inCharacter, const CharacterVirtual* inOtherCharacter, const SubShapeID& inSubShapeID2) {
   return env->CallBooleanMethod(obj, CharacterContactListenerImpl::OnCharacterContactValidate_customJJJ_ID, (jlong)inCharacter, (jlong)inOtherCharacter, (jlong)&inSubShapeID2);
}
virtual void OnContactAdded_custom(const CharacterVirtual* inCharacter, const BodyID& inBodyID2, const SubShapeID& inSubShapeID2, const RVec3& inContactPosition, const Vec3& inContactNormal, CharacterContactSettings& ioSettings) {
   env->CallVoidMethod(obj, CharacterContactListenerImpl::OnContactAdded_customJJJJJJ_ID, (jlong)inCharacter, (jlong)&inBodyID2, (jlong)&inSubShapeID2, (jlong)&inContactPosition, (jlong)&inContactNormal, (jlong)&ioSettings);
}
virtual void OnContactPersisted_custom(const CharacterVirtual* inCharacter, const BodyID& inBodyID2, const SubShapeID& inSubShapeID2, const RVec3& inContactPosition, const Vec3& inContactNormal, CharacterContactSettings& ioSettings) {
   env->CallVoidMethod(obj, CharacterContactListenerImpl::OnContactPersisted_customJJJJJJ_ID, (jlong)inCharacter, (jlong)&inBodyID2, (jlong)&inSubShapeID2, (jlong)&inContactPosition, (jlong)&inContactNormal, (jlong)&ioSettings);
}
virtual void OnContactRemoved_custom(const CharacterVirtual* inCharacter, const BodyID& inBodyID2, const SubShapeID& inSubShapeID2) {
   env->CallVoidMethod(obj, CharacterContactListenerImpl::OnContactRemoved_customJJJ_ID, (jlong)inCharacter, (jlong)&inBodyID2, (jlong)&inSubShapeID2);
}
virtual void OnCharacterContactAdded_custom(const CharacterVirtual* inCharacter, const CharacterVirtual* inOtherCharacter, const SubShapeID& inSubShapeID2, const RVec3& inContactPosition, const Vec3& inContactNormal, CharacterContactSettings& ioSettings) {
   env->CallVoidMethod(obj, CharacterContactListenerImpl::OnCharacterContactAdded_customJJJJJJ_ID, (jlong)inCharacter, (jlong)inOtherCharacter, (jlong)&inSubShapeID2, (jlong)&inContactPosition, (jlong)&inContactNormal, (jlong)&ioSettings);
}
virtual void OnCharacterContactPersisted_custom(const CharacterVirtual* inCharacter, const CharacterVirtual* inOtherCharacter, const SubShapeID& inSubShapeID2, const Vec3& inContactPosition, const Vec3& inContactNormal, CharacterContactSettings& ioSettings) {
   env->CallVoidMethod(obj, CharacterContactListenerImpl::OnCharacterContactPersisted_customJJJJJJ_ID, (jlong)inCharacter, (jlong)inOtherCharacter, (jlong)&inSubShapeID2, (jlong)&inContactPosition, (jlong)&inContactNormal, (jlong)&ioSettings);
}
virtual void OnCharacterContactRemoved_custom(const CharacterVirtual* inCharacter, const CharacterID& inOtherCharacter, const SubShapeID& inSubShapeID2) {
   env->CallVoidMethod(obj, CharacterContactListenerImpl::OnCharacterContactRemoved_customJJJ_ID, (jlong)inCharacter, (jlong)&inOtherCharacter, (jlong)&inSubShapeID2);
}
virtual void OnContactSolve_custom(const CharacterVirtual* inCharacter, const BodyID& inBodyID2, const SubShapeID& inSubShapeID2, const RVec3& inContactPosition, const Vec3& inContactNormal, const Vec3& inContactVelocity, const PhysicsMaterial* inContactMaterial, const Vec3& inCharacterVelocity, const Vec3& ioNewCharacterVelocity) {
   env->CallVoidMethod(obj, CharacterContactListenerImpl::OnContactSolve_customJJJJJJJJJ_ID, (jlong)inCharacter, (jlong)&inBodyID2, (jlong)&inSubShapeID2, (jlong)&inContactPosition, (jlong)&inContactNormal, (jlong)&inContactVelocity, (jlong)inContactMaterial, (jlong)&inCharacterVelocity, (jlong)&ioNewCharacterVelocity);
}
virtual void OnCharacterContactSolve_custom(const CharacterVirtual* inCharacter, const CharacterVirtual* inOtherCharacter, const SubShapeID& inSubShapeID2, const RVec3& inContactPosition, const Vec3& inContactNormal, const Vec3& inContactVelocity, const PhysicsMaterial* inContactMaterial, const Vec3& inCharacterVelocity, const Vec3& ioNewCharacterVelocity) {
   env->CallVoidMethod(obj, CharacterContactListenerImpl::OnCharacterContactSolve_customJJJJJJJJJ_ID, (jlong)inCharacter, (jlong)inOtherCharacter, (jlong)&inSubShapeID2, (jlong)&inContactPosition, (jlong)&inContactNormal, (jlong)&inContactVelocity, (jlong)inContactMaterial, (jlong)&inCharacterVelocity, (jlong)&ioNewCharacterVelocity);
}
};
*/
    @Deprecated()
    protected CharacterContactListener(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static CharacterContactListener native_new() {
        return new CharacterContactListener((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
CharacterContactListenerImpl* nativeObject = (CharacterContactListenerImpl*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public boolean get_OnAdjustBodyVelocity() {
        return internal_native_get_OnAdjustBodyVelocity(native_address);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
return nativeObject->onAdjustBodyVelocity;
*/
    public static native boolean internal_native_get_OnAdjustBodyVelocity(long this_addr);

    public void set_OnAdjustBodyVelocity(boolean onAdjustBodyVelocity) {
        internal_native_set_OnAdjustBodyVelocity(native_address, onAdjustBodyVelocity);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
nativeObject->onAdjustBodyVelocity = onAdjustBodyVelocity;
*/
    public static native void internal_native_set_OnAdjustBodyVelocity(long this_addr, boolean onAdjustBodyVelocity);

    public boolean get_OnContactValidate() {
        return internal_native_get_OnContactValidate(native_address);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
return nativeObject->onContactValidate;
*/
    public static native boolean internal_native_get_OnContactValidate(long this_addr);

    public void set_OnContactValidate(boolean onContactValidate) {
        internal_native_set_OnContactValidate(native_address, onContactValidate);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
nativeObject->onContactValidate = onContactValidate;
*/
    public static native void internal_native_set_OnContactValidate(long this_addr, boolean onContactValidate);

    public boolean get_OnCharacterContactValidate() {
        return internal_native_get_OnCharacterContactValidate(native_address);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
return nativeObject->onCharacterContactValidate;
*/
    public static native boolean internal_native_get_OnCharacterContactValidate(long this_addr);

    public void set_OnCharacterContactValidate(boolean onCharacterContactValidate) {
        internal_native_set_OnCharacterContactValidate(native_address, onCharacterContactValidate);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
nativeObject->onCharacterContactValidate = onCharacterContactValidate;
*/
    public static native void internal_native_set_OnCharacterContactValidate(long this_addr, boolean onCharacterContactValidate);

    public boolean get_OnContactAdded() {
        return internal_native_get_OnContactAdded(native_address);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
return nativeObject->onContactAdded;
*/
    public static native boolean internal_native_get_OnContactAdded(long this_addr);

    public void set_OnContactAdded(boolean onContactAdded) {
        internal_native_set_OnContactAdded(native_address, onContactAdded);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
nativeObject->onContactAdded = onContactAdded;
*/
    public static native void internal_native_set_OnContactAdded(long this_addr, boolean onContactAdded);

    public boolean get_OnContactPersisted() {
        return internal_native_get_OnContactPersisted(native_address);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
return nativeObject->onContactPersisted;
*/
    public static native boolean internal_native_get_OnContactPersisted(long this_addr);

    public void set_OnContactPersisted(boolean onContactPersisted) {
        internal_native_set_OnContactPersisted(native_address, onContactPersisted);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
nativeObject->onContactPersisted = onContactPersisted;
*/
    public static native void internal_native_set_OnContactPersisted(long this_addr, boolean onContactPersisted);

    public boolean get_OnContactRemoved() {
        return internal_native_get_OnContactRemoved(native_address);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
return nativeObject->onContactRemoved;
*/
    public static native boolean internal_native_get_OnContactRemoved(long this_addr);

    public void set_OnContactRemoved(boolean onContactRemoved) {
        internal_native_set_OnContactRemoved(native_address, onContactRemoved);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
nativeObject->onContactRemoved = onContactRemoved;
*/
    public static native void internal_native_set_OnContactRemoved(long this_addr, boolean onContactRemoved);

    public boolean get_OnCharacterContactAdded() {
        return internal_native_get_OnCharacterContactAdded(native_address);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
return nativeObject->onCharacterContactAdded;
*/
    public static native boolean internal_native_get_OnCharacterContactAdded(long this_addr);

    public void set_OnCharacterContactAdded(boolean onCharacterContactAdded) {
        internal_native_set_OnCharacterContactAdded(native_address, onCharacterContactAdded);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
nativeObject->onCharacterContactAdded = onCharacterContactAdded;
*/
    public static native void internal_native_set_OnCharacterContactAdded(long this_addr, boolean onCharacterContactAdded);

    public boolean get_OnCharacterContactPersisted() {
        return internal_native_get_OnCharacterContactPersisted(native_address);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
return nativeObject->onCharacterContactPersisted;
*/
    public static native boolean internal_native_get_OnCharacterContactPersisted(long this_addr);

    public void set_OnCharacterContactPersisted(boolean onCharacterContactPersisted) {
        internal_native_set_OnCharacterContactPersisted(native_address, onCharacterContactPersisted);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
nativeObject->onCharacterContactPersisted = onCharacterContactPersisted;
*/
    public static native void internal_native_set_OnCharacterContactPersisted(long this_addr, boolean onCharacterContactPersisted);

    public boolean get_OnCharacterContactRemoved() {
        return internal_native_get_OnCharacterContactRemoved(native_address);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
return nativeObject->onCharacterContactRemoved;
*/
    public static native boolean internal_native_get_OnCharacterContactRemoved(long this_addr);

    public void set_OnCharacterContactRemoved(boolean onCharacterContactRemoved) {
        internal_native_set_OnCharacterContactRemoved(native_address, onCharacterContactRemoved);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
nativeObject->onCharacterContactRemoved = onCharacterContactRemoved;
*/
    public static native void internal_native_set_OnCharacterContactRemoved(long this_addr, boolean onCharacterContactRemoved);

    public boolean get_OnContactSolve() {
        return internal_native_get_OnContactSolve(native_address);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
return nativeObject->onContactSolve;
*/
    public static native boolean internal_native_get_OnContactSolve(long this_addr);

    public void set_OnContactSolve(boolean onContactSolve) {
        internal_native_set_OnContactSolve(native_address, onContactSolve);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
nativeObject->onContactSolve = onContactSolve;
*/
    public static native void internal_native_set_OnContactSolve(long this_addr, boolean onContactSolve);

    public boolean get_OnCharacterContactSolve() {
        return internal_native_get_OnCharacterContactSolve(native_address);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
return nativeObject->onCharacterContactSolve;
*/
    public static native boolean internal_native_get_OnCharacterContactSolve(long this_addr);

    public void set_OnCharacterContactSolve(boolean onCharacterContactSolve) {
        internal_native_set_OnCharacterContactSolve(native_address, onCharacterContactSolve);
    }

    /*[-JNI;-NATIVE]
XJPH::CharacterContactListener* nativeObject = (XJPH::CharacterContactListener*)this_addr;
nativeObject->onCharacterContactSolve = onCharacterContactSolve;
*/
    public static native void internal_native_set_OnCharacterContactSolve(long this_addr, boolean onCharacterContactSolve);

    public CharacterContactListener() {
        long addr = internal_native_create();
        internal_reset(addr, true);
        setupCallback();
    }

    private void setupCallback() {
        internal_native_setupCallback(native_address);
    }

    protected void OnAdjustBodyVelocity(CharacterVirtual inCharacter, Body inBody2, Vec3 ioLinearVelocity, Vec3 ioAngularVelocity) {
    }

    private void internal_OnAdjustBodyVelocity(long inCharacter_addr, long inBody2_addr, long ioLinearVelocity_addr, long ioAngularVelocity_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_0 == null)
            CharacterVirtual_TEMP_STATIC_GEN_0 = CharacterVirtual.native_new();
        CharacterVirtual_TEMP_STATIC_GEN_0.internal_reset(inCharacter_addr, false);
        if (Body_TEMP_STATIC_GEN_0 == null)
            Body_TEMP_STATIC_GEN_0 = Body.native_new();
        Body_TEMP_STATIC_GEN_0.internal_reset(inBody2_addr, false);
        if (Vec3_TEMP_STATIC_GEN_0 == null)
            Vec3_TEMP_STATIC_GEN_0 = Vec3.native_new();
        Vec3_TEMP_STATIC_GEN_0.internal_reset(ioLinearVelocity_addr, false);
        if (Vec3_TEMP_STATIC_GEN_1 == null)
            Vec3_TEMP_STATIC_GEN_1 = Vec3.native_new();
        Vec3_TEMP_STATIC_GEN_1.internal_reset(ioAngularVelocity_addr, false);
        OnAdjustBodyVelocity(CharacterVirtual_TEMP_STATIC_GEN_0, Body_TEMP_STATIC_GEN_0, Vec3_TEMP_STATIC_GEN_0, Vec3_TEMP_STATIC_GEN_1);
    }

    protected boolean OnContactValidate(CharacterVirtual inCharacter, BodyID inBodyID2, SubShapeID inSubShapeID2) {
        return false;
    }

    private boolean internal_OnContactValidate(long inCharacter_addr, long inBodyID2_addr, long inSubShapeID2_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_1 == null)
            CharacterVirtual_TEMP_STATIC_GEN_1 = CharacterVirtual.native_new();
        CharacterVirtual_TEMP_STATIC_GEN_1.internal_reset(inCharacter_addr, false);
        if (BodyID_TEMP_STATIC_GEN_0 == null)
            BodyID_TEMP_STATIC_GEN_0 = BodyID.native_new();
        BodyID_TEMP_STATIC_GEN_0.internal_reset(inBodyID2_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_0 == null)
            SubShapeID_TEMP_STATIC_GEN_0 = SubShapeID.native_new();
        SubShapeID_TEMP_STATIC_GEN_0.internal_reset(inSubShapeID2_addr, false);
        return OnContactValidate(CharacterVirtual_TEMP_STATIC_GEN_1, BodyID_TEMP_STATIC_GEN_0, SubShapeID_TEMP_STATIC_GEN_0);
    }

    protected boolean OnCharacterContactValidate(CharacterVirtual inCharacter, CharacterVirtual inOtherCharacter, SubShapeID inSubShapeID2) {
        return false;
    }

    private boolean internal_OnCharacterContactValidate(long inCharacter_addr, long inOtherCharacter_addr, long inSubShapeID2_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_2 == null)
            CharacterVirtual_TEMP_STATIC_GEN_2 = CharacterVirtual.native_new();
        CharacterVirtual_TEMP_STATIC_GEN_2.internal_reset(inCharacter_addr, false);
        if (CharacterVirtual_TEMP_STATIC_GEN_3 == null)
            CharacterVirtual_TEMP_STATIC_GEN_3 = CharacterVirtual.native_new();
        CharacterVirtual_TEMP_STATIC_GEN_3.internal_reset(inOtherCharacter_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_1 == null)
            SubShapeID_TEMP_STATIC_GEN_1 = SubShapeID.native_new();
        SubShapeID_TEMP_STATIC_GEN_1.internal_reset(inSubShapeID2_addr, false);
        return OnCharacterContactValidate(CharacterVirtual_TEMP_STATIC_GEN_2, CharacterVirtual_TEMP_STATIC_GEN_3, SubShapeID_TEMP_STATIC_GEN_1);
    }

    protected void OnContactAdded(CharacterVirtual inCharacter, BodyID inBodyID2, SubShapeID inSubShapeID2, RVec3 inContactPosition, Vec3 inContactNormal, CharacterContactSettings ioSettings) {
    }

    private void internal_OnContactAdded(long inCharacter_addr, long inBodyID2_addr, long inSubShapeID2_addr, long inContactPosition_addr, long inContactNormal_addr, long ioSettings_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_4 == null)
            CharacterVirtual_TEMP_STATIC_GEN_4 = CharacterVirtual.native_new();
        CharacterVirtual_TEMP_STATIC_GEN_4.internal_reset(inCharacter_addr, false);
        if (BodyID_TEMP_STATIC_GEN_1 == null)
            BodyID_TEMP_STATIC_GEN_1 = BodyID.native_new();
        BodyID_TEMP_STATIC_GEN_1.internal_reset(inBodyID2_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_2 == null)
            SubShapeID_TEMP_STATIC_GEN_2 = SubShapeID.native_new();
        SubShapeID_TEMP_STATIC_GEN_2.internal_reset(inSubShapeID2_addr, false);
        if (RVec3_TEMP_STATIC_GEN_0 == null)
            RVec3_TEMP_STATIC_GEN_0 = RVec3.native_new();
        RVec3_TEMP_STATIC_GEN_0.internal_reset(inContactPosition_addr, false);
        if (Vec3_TEMP_STATIC_GEN_2 == null)
            Vec3_TEMP_STATIC_GEN_2 = Vec3.native_new();
        Vec3_TEMP_STATIC_GEN_2.internal_reset(inContactNormal_addr, false);
        if (CharacterContactSettings_TEMP_STATIC_GEN_0 == null)
            CharacterContactSettings_TEMP_STATIC_GEN_0 = CharacterContactSettings.native_new();
        CharacterContactSettings_TEMP_STATIC_GEN_0.internal_reset(ioSettings_addr, false);
        OnContactAdded(CharacterVirtual_TEMP_STATIC_GEN_4, BodyID_TEMP_STATIC_GEN_1, SubShapeID_TEMP_STATIC_GEN_2, RVec3_TEMP_STATIC_GEN_0, Vec3_TEMP_STATIC_GEN_2, CharacterContactSettings_TEMP_STATIC_GEN_0);
    }

    protected void OnContactPersisted(CharacterVirtual inCharacter, BodyID inBodyID2, SubShapeID inSubShapeID2, RVec3 inContactPosition, Vec3 inContactNormal, CharacterContactSettings ioSettings) {
    }

    private void internal_OnContactPersisted(long inCharacter_addr, long inBodyID2_addr, long inSubShapeID2_addr, long inContactPosition_addr, long inContactNormal_addr, long ioSettings_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_5 == null)
            CharacterVirtual_TEMP_STATIC_GEN_5 = CharacterVirtual.native_new();
        CharacterVirtual_TEMP_STATIC_GEN_5.internal_reset(inCharacter_addr, false);
        if (BodyID_TEMP_STATIC_GEN_2 == null)
            BodyID_TEMP_STATIC_GEN_2 = BodyID.native_new();
        BodyID_TEMP_STATIC_GEN_2.internal_reset(inBodyID2_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_3 == null)
            SubShapeID_TEMP_STATIC_GEN_3 = SubShapeID.native_new();
        SubShapeID_TEMP_STATIC_GEN_3.internal_reset(inSubShapeID2_addr, false);
        if (RVec3_TEMP_STATIC_GEN_1 == null)
            RVec3_TEMP_STATIC_GEN_1 = RVec3.native_new();
        RVec3_TEMP_STATIC_GEN_1.internal_reset(inContactPosition_addr, false);
        if (Vec3_TEMP_STATIC_GEN_3 == null)
            Vec3_TEMP_STATIC_GEN_3 = Vec3.native_new();
        Vec3_TEMP_STATIC_GEN_3.internal_reset(inContactNormal_addr, false);
        if (CharacterContactSettings_TEMP_STATIC_GEN_1 == null)
            CharacterContactSettings_TEMP_STATIC_GEN_1 = CharacterContactSettings.native_new();
        CharacterContactSettings_TEMP_STATIC_GEN_1.internal_reset(ioSettings_addr, false);
        OnContactPersisted(CharacterVirtual_TEMP_STATIC_GEN_5, BodyID_TEMP_STATIC_GEN_2, SubShapeID_TEMP_STATIC_GEN_3, RVec3_TEMP_STATIC_GEN_1, Vec3_TEMP_STATIC_GEN_3, CharacterContactSettings_TEMP_STATIC_GEN_1);
    }

    protected void OnContactRemoved(CharacterVirtual inCharacter, BodyID inBodyID2, SubShapeID inSubShapeID2) {
    }

    private void internal_OnContactRemoved(long inCharacter_addr, long inBodyID2_addr, long inSubShapeID2_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_6 == null)
            CharacterVirtual_TEMP_STATIC_GEN_6 = CharacterVirtual.native_new();
        CharacterVirtual_TEMP_STATIC_GEN_6.internal_reset(inCharacter_addr, false);
        if (BodyID_TEMP_STATIC_GEN_3 == null)
            BodyID_TEMP_STATIC_GEN_3 = BodyID.native_new();
        BodyID_TEMP_STATIC_GEN_3.internal_reset(inBodyID2_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_4 == null)
            SubShapeID_TEMP_STATIC_GEN_4 = SubShapeID.native_new();
        SubShapeID_TEMP_STATIC_GEN_4.internal_reset(inSubShapeID2_addr, false);
        OnContactRemoved(CharacterVirtual_TEMP_STATIC_GEN_6, BodyID_TEMP_STATIC_GEN_3, SubShapeID_TEMP_STATIC_GEN_4);
    }

    protected void OnCharacterContactAdded(CharacterVirtual inCharacter, CharacterVirtual inOtherCharacter, SubShapeID inSubShapeID2, RVec3 inContactPosition, Vec3 inContactNormal, CharacterContactSettings ioSettings) {
    }

    private void internal_OnCharacterContactAdded(long inCharacter_addr, long inOtherCharacter_addr, long inSubShapeID2_addr, long inContactPosition_addr, long inContactNormal_addr, long ioSettings_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_7 == null)
            CharacterVirtual_TEMP_STATIC_GEN_7 = CharacterVirtual.native_new();
        CharacterVirtual_TEMP_STATIC_GEN_7.internal_reset(inCharacter_addr, false);
        if (CharacterVirtual_TEMP_STATIC_GEN_8 == null)
            CharacterVirtual_TEMP_STATIC_GEN_8 = CharacterVirtual.native_new();
        CharacterVirtual_TEMP_STATIC_GEN_8.internal_reset(inOtherCharacter_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_5 == null)
            SubShapeID_TEMP_STATIC_GEN_5 = SubShapeID.native_new();
        SubShapeID_TEMP_STATIC_GEN_5.internal_reset(inSubShapeID2_addr, false);
        if (RVec3_TEMP_STATIC_GEN_2 == null)
            RVec3_TEMP_STATIC_GEN_2 = RVec3.native_new();
        RVec3_TEMP_STATIC_GEN_2.internal_reset(inContactPosition_addr, false);
        if (Vec3_TEMP_STATIC_GEN_4 == null)
            Vec3_TEMP_STATIC_GEN_4 = Vec3.native_new();
        Vec3_TEMP_STATIC_GEN_4.internal_reset(inContactNormal_addr, false);
        if (CharacterContactSettings_TEMP_STATIC_GEN_2 == null)
            CharacterContactSettings_TEMP_STATIC_GEN_2 = CharacterContactSettings.native_new();
        CharacterContactSettings_TEMP_STATIC_GEN_2.internal_reset(ioSettings_addr, false);
        OnCharacterContactAdded(CharacterVirtual_TEMP_STATIC_GEN_7, CharacterVirtual_TEMP_STATIC_GEN_8, SubShapeID_TEMP_STATIC_GEN_5, RVec3_TEMP_STATIC_GEN_2, Vec3_TEMP_STATIC_GEN_4, CharacterContactSettings_TEMP_STATIC_GEN_2);
    }

    protected void OnCharacterContactPersisted(CharacterVirtual inCharacter, CharacterVirtual inOtherCharacter, SubShapeID inSubShapeID2, Vec3 inContactPosition, Vec3 inContactNormal, CharacterContactSettings ioSettings) {
    }

    private void internal_OnCharacterContactPersisted(long inCharacter_addr, long inOtherCharacter_addr, long inSubShapeID2_addr, long inContactPosition_addr, long inContactNormal_addr, long ioSettings_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_9 == null)
            CharacterVirtual_TEMP_STATIC_GEN_9 = CharacterVirtual.native_new();
        CharacterVirtual_TEMP_STATIC_GEN_9.internal_reset(inCharacter_addr, false);
        if (CharacterVirtual_TEMP_STATIC_GEN_10 == null)
            CharacterVirtual_TEMP_STATIC_GEN_10 = CharacterVirtual.native_new();
        CharacterVirtual_TEMP_STATIC_GEN_10.internal_reset(inOtherCharacter_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_6 == null)
            SubShapeID_TEMP_STATIC_GEN_6 = SubShapeID.native_new();
        SubShapeID_TEMP_STATIC_GEN_6.internal_reset(inSubShapeID2_addr, false);
        if (Vec3_TEMP_STATIC_GEN_5 == null)
            Vec3_TEMP_STATIC_GEN_5 = Vec3.native_new();
        Vec3_TEMP_STATIC_GEN_5.internal_reset(inContactPosition_addr, false);
        if (Vec3_TEMP_STATIC_GEN_6 == null)
            Vec3_TEMP_STATIC_GEN_6 = Vec3.native_new();
        Vec3_TEMP_STATIC_GEN_6.internal_reset(inContactNormal_addr, false);
        if (CharacterContactSettings_TEMP_STATIC_GEN_3 == null)
            CharacterContactSettings_TEMP_STATIC_GEN_3 = CharacterContactSettings.native_new();
        CharacterContactSettings_TEMP_STATIC_GEN_3.internal_reset(ioSettings_addr, false);
        OnCharacterContactPersisted(CharacterVirtual_TEMP_STATIC_GEN_9, CharacterVirtual_TEMP_STATIC_GEN_10, SubShapeID_TEMP_STATIC_GEN_6, Vec3_TEMP_STATIC_GEN_5, Vec3_TEMP_STATIC_GEN_6, CharacterContactSettings_TEMP_STATIC_GEN_3);
    }

    protected void OnCharacterContactRemoved(CharacterVirtual inCharacter, CharacterID inOtherCharacter, SubShapeID inSubShapeID2) {
    }

    private void internal_OnCharacterContactRemoved(long inCharacter_addr, long inOtherCharacter_addr, long inSubShapeID2_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_11 == null)
            CharacterVirtual_TEMP_STATIC_GEN_11 = CharacterVirtual.native_new();
        CharacterVirtual_TEMP_STATIC_GEN_11.internal_reset(inCharacter_addr, false);
        if (CharacterID_TEMP_STATIC_GEN_0 == null)
            CharacterID_TEMP_STATIC_GEN_0 = CharacterID.native_new();
        CharacterID_TEMP_STATIC_GEN_0.internal_reset(inOtherCharacter_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_7 == null)
            SubShapeID_TEMP_STATIC_GEN_7 = SubShapeID.native_new();
        SubShapeID_TEMP_STATIC_GEN_7.internal_reset(inSubShapeID2_addr, false);
        OnCharacterContactRemoved(CharacterVirtual_TEMP_STATIC_GEN_11, CharacterID_TEMP_STATIC_GEN_0, SubShapeID_TEMP_STATIC_GEN_7);
    }

    protected void OnContactSolve(CharacterVirtual inCharacter, BodyID inBodyID2, SubShapeID inSubShapeID2, RVec3 inContactPosition, Vec3 inContactNormal, Vec3 inContactVelocity, PhysicsMaterial inContactMaterial, Vec3 inCharacterVelocity, Vec3 ioNewCharacterVelocity) {
    }

    private void internal_OnContactSolve(long inCharacter_addr, long inBodyID2_addr, long inSubShapeID2_addr, long inContactPosition_addr, long inContactNormal_addr, long inContactVelocity_addr, long inContactMaterial_addr, long inCharacterVelocity_addr, long ioNewCharacterVelocity_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_12 == null)
            CharacterVirtual_TEMP_STATIC_GEN_12 = CharacterVirtual.native_new();
        CharacterVirtual_TEMP_STATIC_GEN_12.internal_reset(inCharacter_addr, false);
        if (BodyID_TEMP_STATIC_GEN_4 == null)
            BodyID_TEMP_STATIC_GEN_4 = BodyID.native_new();
        BodyID_TEMP_STATIC_GEN_4.internal_reset(inBodyID2_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_8 == null)
            SubShapeID_TEMP_STATIC_GEN_8 = SubShapeID.native_new();
        SubShapeID_TEMP_STATIC_GEN_8.internal_reset(inSubShapeID2_addr, false);
        if (RVec3_TEMP_STATIC_GEN_3 == null)
            RVec3_TEMP_STATIC_GEN_3 = RVec3.native_new();
        RVec3_TEMP_STATIC_GEN_3.internal_reset(inContactPosition_addr, false);
        if (Vec3_TEMP_STATIC_GEN_7 == null)
            Vec3_TEMP_STATIC_GEN_7 = Vec3.native_new();
        Vec3_TEMP_STATIC_GEN_7.internal_reset(inContactNormal_addr, false);
        if (Vec3_TEMP_STATIC_GEN_8 == null)
            Vec3_TEMP_STATIC_GEN_8 = Vec3.native_new();
        Vec3_TEMP_STATIC_GEN_8.internal_reset(inContactVelocity_addr, false);
        if (PhysicsMaterial_TEMP_STATIC_GEN_0 == null)
            PhysicsMaterial_TEMP_STATIC_GEN_0 = PhysicsMaterial.native_new();
        PhysicsMaterial_TEMP_STATIC_GEN_0.internal_reset(inContactMaterial_addr, false);
        if (Vec3_TEMP_STATIC_GEN_9 == null)
            Vec3_TEMP_STATIC_GEN_9 = Vec3.native_new();
        Vec3_TEMP_STATIC_GEN_9.internal_reset(inCharacterVelocity_addr, false);
        if (Vec3_TEMP_STATIC_GEN_10 == null)
            Vec3_TEMP_STATIC_GEN_10 = Vec3.native_new();
        Vec3_TEMP_STATIC_GEN_10.internal_reset(ioNewCharacterVelocity_addr, false);
        OnContactSolve(CharacterVirtual_TEMP_STATIC_GEN_12, BodyID_TEMP_STATIC_GEN_4, SubShapeID_TEMP_STATIC_GEN_8, RVec3_TEMP_STATIC_GEN_3, Vec3_TEMP_STATIC_GEN_7, Vec3_TEMP_STATIC_GEN_8, PhysicsMaterial_TEMP_STATIC_GEN_0, Vec3_TEMP_STATIC_GEN_9, Vec3_TEMP_STATIC_GEN_10);
    }

    protected void OnCharacterContactSolve(CharacterVirtual inCharacter, CharacterVirtual inOtherCharacter, SubShapeID inSubShapeID2, RVec3 inContactPosition, Vec3 inContactNormal, Vec3 inContactVelocity, PhysicsMaterial inContactMaterial, Vec3 inCharacterVelocity, Vec3 ioNewCharacterVelocity) {
    }

    private void internal_OnCharacterContactSolve(long inCharacter_addr, long inOtherCharacter_addr, long inSubShapeID2_addr, long inContactPosition_addr, long inContactNormal_addr, long inContactVelocity_addr, long inContactMaterial_addr, long inCharacterVelocity_addr, long ioNewCharacterVelocity_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_13 == null)
            CharacterVirtual_TEMP_STATIC_GEN_13 = CharacterVirtual.native_new();
        CharacterVirtual_TEMP_STATIC_GEN_13.internal_reset(inCharacter_addr, false);
        if (CharacterVirtual_TEMP_STATIC_GEN_14 == null)
            CharacterVirtual_TEMP_STATIC_GEN_14 = CharacterVirtual.native_new();
        CharacterVirtual_TEMP_STATIC_GEN_14.internal_reset(inOtherCharacter_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_9 == null)
            SubShapeID_TEMP_STATIC_GEN_9 = SubShapeID.native_new();
        SubShapeID_TEMP_STATIC_GEN_9.internal_reset(inSubShapeID2_addr, false);
        if (RVec3_TEMP_STATIC_GEN_4 == null)
            RVec3_TEMP_STATIC_GEN_4 = RVec3.native_new();
        RVec3_TEMP_STATIC_GEN_4.internal_reset(inContactPosition_addr, false);
        if (Vec3_TEMP_STATIC_GEN_11 == null)
            Vec3_TEMP_STATIC_GEN_11 = Vec3.native_new();
        Vec3_TEMP_STATIC_GEN_11.internal_reset(inContactNormal_addr, false);
        if (Vec3_TEMP_STATIC_GEN_12 == null)
            Vec3_TEMP_STATIC_GEN_12 = Vec3.native_new();
        Vec3_TEMP_STATIC_GEN_12.internal_reset(inContactVelocity_addr, false);
        if (PhysicsMaterial_TEMP_STATIC_GEN_1 == null)
            PhysicsMaterial_TEMP_STATIC_GEN_1 = PhysicsMaterial.native_new();
        PhysicsMaterial_TEMP_STATIC_GEN_1.internal_reset(inContactMaterial_addr, false);
        if (Vec3_TEMP_STATIC_GEN_13 == null)
            Vec3_TEMP_STATIC_GEN_13 = Vec3.native_new();
        Vec3_TEMP_STATIC_GEN_13.internal_reset(inCharacterVelocity_addr, false);
        if (Vec3_TEMP_STATIC_GEN_14 == null)
            Vec3_TEMP_STATIC_GEN_14 = Vec3.native_new();
        Vec3_TEMP_STATIC_GEN_14.internal_reset(ioNewCharacterVelocity_addr, false);
        OnCharacterContactSolve(CharacterVirtual_TEMP_STATIC_GEN_13, CharacterVirtual_TEMP_STATIC_GEN_14, SubShapeID_TEMP_STATIC_GEN_9, RVec3_TEMP_STATIC_GEN_4, Vec3_TEMP_STATIC_GEN_11, Vec3_TEMP_STATIC_GEN_12, PhysicsMaterial_TEMP_STATIC_GEN_1, Vec3_TEMP_STATIC_GEN_13, Vec3_TEMP_STATIC_GEN_14);
    }

    /*[-JNI;-NATIVE]
return (jlong)new CharacterContactListenerImpl();
*/
    public static native long internal_native_create();

    /*[-JNI;-NATIVE]
CharacterContactListenerImpl* nativeObject = (CharacterContactListenerImpl*)this_addr;
nativeObject->setupCallback(env, object);
*/
    public native void internal_native_setupCallback(long this_addr);
}
