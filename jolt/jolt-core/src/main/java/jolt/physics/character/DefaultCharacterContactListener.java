/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.character;

import jolt.physics.body.Body;
import jolt.math.Vec3;
import jolt.physics.body.BodyID;
import jolt.physics.collision.shape.SubShapeID;

public class DefaultCharacterContactListener extends CharacterContactListener {

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_0;

    static private Body Body_TEMP_STATIC_GEN_0;

    static private Vec3 Vec3_TEMP_STATIC_GEN_0;

    static private Vec3 Vec3_TEMP_STATIC_GEN_1;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_1;

    static private BodyID BodyID_TEMP_STATIC_GEN_0;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_0;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_2;

    static private CharacterVirtual CharacterVirtual_TEMP_STATIC_GEN_3;

    static private SubShapeID SubShapeID_TEMP_STATIC_GEN_1;

    static public final DefaultCharacterContactListener NULL = DefaultCharacterContactListener.native_new();

    static public final DefaultCharacterContactListener T_01 = DefaultCharacterContactListener.native_new();

    static public final DefaultCharacterContactListener T_02 = DefaultCharacterContactListener.native_new();

    static public final DefaultCharacterContactListener T_03 = DefaultCharacterContactListener.native_new();

    /*[-JNI;-NATIVE]
class DefaultCharacterContactListenerImpl : public DefaultCharacterContactListener {
private:
	JNIEnv* env;
	jobject obj;
public:
	inline static jclass jClassID = 0;
	inline static jmethodID OnAdjustBodyVelocity_customJJJJ_ID = 0;
	inline static jmethodID OnContactValidate_customJJJ_ID = 0;
	inline static jmethodID OnCharacterContactValidate_customJJJ_ID = 0;

void setupCallback(JNIEnv* env, jobject obj) {
	this->env = env;
	this->obj = env->NewGlobalRef(obj);
	if(DefaultCharacterContactListenerImpl::jClassID == 0) {
		DefaultCharacterContactListenerImpl::jClassID = (jclass)env->NewGlobalRef(env->GetObjectClass(obj));
		DefaultCharacterContactListenerImpl::OnAdjustBodyVelocity_customJJJJ_ID = env->GetMethodID(jClassID, "internal_OnAdjustBodyVelocity_custom", "(JJJJ)V");
		DefaultCharacterContactListenerImpl::OnContactValidate_customJJJ_ID = env->GetMethodID(jClassID, "internal_OnContactValidate_custom", "(JJJ)Z");
		DefaultCharacterContactListenerImpl::OnCharacterContactValidate_customJJJ_ID = env->GetMethodID(jClassID, "internal_OnCharacterContactValidate_custom", "(JJJ)Z");
	}
}
virtual void OnAdjustBodyVelocity_custom(const CharacterVirtual* inCharacter, const Body& inBody2, Vec3& ioLinearVelocity, Vec3& ioAngularVelocity) {
   env->CallVoidMethod(obj, DefaultCharacterContactListenerImpl::OnAdjustBodyVelocity_customJJJJ_ID, (jlong)inCharacter, (jlong)&inBody2, (jlong)&ioLinearVelocity, (jlong)&ioAngularVelocity);
}
virtual bool OnContactValidate_custom(const CharacterVirtual* inCharacter, const BodyID& inBodyID2, const SubShapeID& inSubShapeID2) {
   return env->CallBooleanMethod(obj, DefaultCharacterContactListenerImpl::OnContactValidate_customJJJ_ID, (jlong)inCharacter, (jlong)&inBodyID2, (jlong)&inSubShapeID2);
}
virtual bool OnCharacterContactValidate_custom(const CharacterVirtual* inCharacter, const CharacterVirtual* inOtherCharacter, const SubShapeID& inSubShapeID2) {
   return env->CallBooleanMethod(obj, DefaultCharacterContactListenerImpl::OnCharacterContactValidate_customJJJ_ID, (jlong)inCharacter, (jlong)inOtherCharacter, (jlong)&inSubShapeID2);
}
};
*/
    @Deprecated()
    protected DefaultCharacterContactListener(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static DefaultCharacterContactListener native_new() {
        return new DefaultCharacterContactListener((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
DefaultCharacterContactListenerImpl* nativeObject = (DefaultCharacterContactListenerImpl*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public DefaultCharacterContactListener() {
        super((byte) 1, (char) 1);
        long addr = internal_native_create();
        internal_reset(addr, true);
        setupCallback();
    }

    private void setupCallback() {
        internal_native_setupCallback(native_address);
    }

    protected void OnAdjustBodyVelocity_custom(CharacterVirtual inCharacter, Body inBody2, Vec3 ioLinearVelocity, Vec3 ioAngularVelocity) {
    }

    private void internal_OnAdjustBodyVelocity_custom(long inCharacter_addr, long inBody2_addr, long ioLinearVelocity_addr, long ioAngularVelocity_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_0 == null)
            CharacterVirtual_TEMP_STATIC_GEN_0 = CharacterVirtual.native_new();
        CharacterVirtual_TEMP_STATIC_GEN_0.internal_reset(inCharacter_addr, false);
        if (Body_TEMP_STATIC_GEN_0 == null)
            Body_TEMP_STATIC_GEN_0 = Body.native_new();
        Body_TEMP_STATIC_GEN_0.internal_reset(inBody2_addr, false);
        if (Vec3_TEMP_STATIC_GEN_0 == null)
            Vec3_TEMP_STATIC_GEN_0 = Vec3.native_new();
        Vec3_TEMP_STATIC_GEN_0.internal_reset(ioLinearVelocity_addr, false);
        if (Vec3_TEMP_STATIC_GEN_1 == null)
            Vec3_TEMP_STATIC_GEN_1 = Vec3.native_new();
        Vec3_TEMP_STATIC_GEN_1.internal_reset(ioAngularVelocity_addr, false);
        OnAdjustBodyVelocity_custom(CharacterVirtual_TEMP_STATIC_GEN_0, Body_TEMP_STATIC_GEN_0, Vec3_TEMP_STATIC_GEN_0, Vec3_TEMP_STATIC_GEN_1);
    }

    protected boolean OnContactValidate_custom(CharacterVirtual inCharacter, BodyID inBodyID2, SubShapeID inSubShapeID2) {
        return false;
    }

    private boolean internal_OnContactValidate_custom(long inCharacter_addr, long inBodyID2_addr, long inSubShapeID2_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_1 == null)
            CharacterVirtual_TEMP_STATIC_GEN_1 = CharacterVirtual.native_new();
        CharacterVirtual_TEMP_STATIC_GEN_1.internal_reset(inCharacter_addr, false);
        if (BodyID_TEMP_STATIC_GEN_0 == null)
            BodyID_TEMP_STATIC_GEN_0 = BodyID.native_new();
        BodyID_TEMP_STATIC_GEN_0.internal_reset(inBodyID2_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_0 == null)
            SubShapeID_TEMP_STATIC_GEN_0 = SubShapeID.native_new();
        SubShapeID_TEMP_STATIC_GEN_0.internal_reset(inSubShapeID2_addr, false);
        return OnContactValidate_custom(CharacterVirtual_TEMP_STATIC_GEN_1, BodyID_TEMP_STATIC_GEN_0, SubShapeID_TEMP_STATIC_GEN_0);
    }

    protected boolean OnCharacterContactValidate_custom(CharacterVirtual inCharacter, CharacterVirtual inOtherCharacter, SubShapeID inSubShapeID2) {
        return false;
    }

    private boolean internal_OnCharacterContactValidate_custom(long inCharacter_addr, long inOtherCharacter_addr, long inSubShapeID2_addr) {
        if (CharacterVirtual_TEMP_STATIC_GEN_2 == null)
            CharacterVirtual_TEMP_STATIC_GEN_2 = CharacterVirtual.native_new();
        CharacterVirtual_TEMP_STATIC_GEN_2.internal_reset(inCharacter_addr, false);
        if (CharacterVirtual_TEMP_STATIC_GEN_3 == null)
            CharacterVirtual_TEMP_STATIC_GEN_3 = CharacterVirtual.native_new();
        CharacterVirtual_TEMP_STATIC_GEN_3.internal_reset(inOtherCharacter_addr, false);
        if (SubShapeID_TEMP_STATIC_GEN_1 == null)
            SubShapeID_TEMP_STATIC_GEN_1 = SubShapeID.native_new();
        SubShapeID_TEMP_STATIC_GEN_1.internal_reset(inSubShapeID2_addr, false);
        return OnCharacterContactValidate_custom(CharacterVirtual_TEMP_STATIC_GEN_2, CharacterVirtual_TEMP_STATIC_GEN_3, SubShapeID_TEMP_STATIC_GEN_1);
    }

    /*[-JNI;-NATIVE]
return (jlong)new DefaultCharacterContactListenerImpl();
*/
    public static native long internal_native_create();

    /*[-JNI;-NATIVE]
DefaultCharacterContactListenerImpl* nativeObject = (DefaultCharacterContactListenerImpl*)this_addr;
nativeObject->setupCallback(env, object);
*/
    public native void internal_native_setupCallback(long this_addr);
}
