/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.constraints;

import jolt.math.Vec3;

public class PointConstraint extends TwoBodyConstraint {

    private Vec3 Vec3_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_1;

    private Vec3 Vec3_TEMP_GEN_2;

    static public final PointConstraint NULL = PointConstraint.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected PointConstraint(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static PointConstraint native_new() {
        return new PointConstraint((byte) 0, (char) 0);
    }

    public Vec3 GetLocalSpacePoint1() {
        long pointer = internal_native_GetLocalSpacePoint1(native_address);
        if (pointer == 0)
            return Vec3.NULL;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = Vec3.native_new();
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
PointConstraint* nativeObject = (PointConstraint*)this_addr;
static Vec3 copy_addr;
copy_addr = nativeObject->GetLocalSpacePoint1();
return (jlong)&copy_addr;*/
    public static native long internal_native_GetLocalSpacePoint1(long this_addr);

    public Vec3 GetLocalSpacePoint2() {
        long pointer = internal_native_GetLocalSpacePoint2(native_address);
        if (pointer == 0)
            return Vec3.NULL;
        if (Vec3_TEMP_GEN_1 == null)
            Vec3_TEMP_GEN_1 = Vec3.native_new();
        Vec3_TEMP_GEN_1.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_1;
    }

    /*[-JNI;-NATIVE]
PointConstraint* nativeObject = (PointConstraint*)this_addr;
static Vec3 copy_addr;
copy_addr = nativeObject->GetLocalSpacePoint2();
return (jlong)&copy_addr;*/
    public static native long internal_native_GetLocalSpacePoint2(long this_addr);

    public Vec3 GetTotalLambdaPosition() {
        long pointer = internal_native_GetTotalLambdaPosition(native_address);
        if (pointer == 0)
            return Vec3.NULL;
        if (Vec3_TEMP_GEN_2 == null)
            Vec3_TEMP_GEN_2 = Vec3.native_new();
        Vec3_TEMP_GEN_2.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_2;
    }

    /*[-JNI;-NATIVE]
PointConstraint* nativeObject = (PointConstraint*)this_addr;
static Vec3 copy_addr;
copy_addr = nativeObject->GetTotalLambdaPosition();
return (jlong)&copy_addr;*/
    public static native long internal_native_GetTotalLambdaPosition(long this_addr);
}
