/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.collision;

import jolt.physics.softbody.CollideShapeCollector;

public class CollideShapeClosestHitCollisionCollector extends CollideShapeCollector {

    private CollideShapeResult CollideShapeResult_TEMP_GEN_0;

    static public final CollideShapeClosestHitCollisionCollector NULL = CollideShapeClosestHitCollisionCollector.native_new();

    public CollideShapeClosestHitCollisionCollector() {
        super((byte) 1, (char) 1);
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new CollideShapeClosestHitCollisionCollector();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected CollideShapeClosestHitCollisionCollector(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static CollideShapeClosestHitCollisionCollector native_new() {
        return new CollideShapeClosestHitCollisionCollector((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
CollideShapeClosestHitCollisionCollector* nativeObject = (CollideShapeClosestHitCollisionCollector*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public boolean HadHit() {
        return internal_native_HadHit(native_address);
    }

    /*[-JNI;-NATIVE]
CollideShapeClosestHitCollisionCollector* nativeObject = (CollideShapeClosestHitCollisionCollector*)this_addr;
return nativeObject->HadHit();
*/
    public static native boolean internal_native_HadHit(long this_addr);

    public CollideShapeResult get_mHit() {
        long pointer = internal_native_get_mHit(native_address);
        if (pointer == 0)
            return CollideShapeResult.NULL;
        if (CollideShapeResult_TEMP_GEN_0 == null)
            CollideShapeResult_TEMP_GEN_0 = CollideShapeResult.native_new();
        CollideShapeResult_TEMP_GEN_0.internal_reset(pointer, false);
        return CollideShapeResult_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
CollideShapeClosestHitCollisionCollector* nativeObject = (CollideShapeClosestHitCollisionCollector*)this_addr;
return (jlong)&nativeObject->mHit;
*/
    public static native long internal_native_get_mHit(long this_addr);

    public void set_mHit(CollideShapeResult mHit) {
        internal_native_set_mHit(native_address, mHit.native_address);
    }

    /*[-JNI;-NATIVE]
CollideShapeClosestHitCollisionCollector* nativeObject = (CollideShapeClosestHitCollisionCollector*)this_addr;
nativeObject->mHit = *((CollideShapeResult*)mHit_addr);
*/
    public static native void internal_native_set_mHit(long this_addr, long mHit_addr);
}
