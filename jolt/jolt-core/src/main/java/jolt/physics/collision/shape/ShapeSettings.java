/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.collision.shape;

import jolt.core.RefTargetShapeSettings;

public class ShapeSettings extends RefTargetShapeSettings {

    private ShapeResult ShapeResult_TEMP_GEN_0;

    static public final ShapeSettings NULL = ShapeSettings.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected ShapeSettings(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static ShapeSettings native_new() {
        return new ShapeSettings((byte) 0, (char) 0);
    }

    public int GetRefCount() {
        return internal_native_GetRefCount(native_address);
    }

    /*[-JNI;-NATIVE]
ShapeSettings* nativeObject = (ShapeSettings*)this_addr;
return nativeObject->GetRefCount();
*/
    public static native int internal_native_GetRefCount(long this_addr);

    public void AddRef() {
        internal_native_AddRef(native_address);
    }

    /*[-JNI;-NATIVE]
ShapeSettings* nativeObject = (ShapeSettings*)this_addr;
nativeObject->AddRef();
*/
    public static native void internal_native_AddRef(long this_addr);

    public void Release() {
        internal_native_Release(native_address);
    }

    /*[-JNI;-NATIVE]
ShapeSettings* nativeObject = (ShapeSettings*)this_addr;
nativeObject->Release();
*/
    public static native void internal_native_Release(long this_addr);

    public ShapeResult Create() {
        long pointer = internal_native_Create(native_address);
        if (pointer == 0)
            return ShapeResult.NULL;
        if (ShapeResult_TEMP_GEN_0 == null)
            ShapeResult_TEMP_GEN_0 = ShapeResult.native_new();
        ShapeResult_TEMP_GEN_0.internal_reset(pointer, false);
        return ShapeResult_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
ShapeSettings* nativeObject = (ShapeSettings*)this_addr;
static Shape::ShapeResult copy_addr;
copy_addr = nativeObject->Create();
return (jlong)&copy_addr;*/
    public static native long internal_native_Create(long this_addr);

    public void ClearCachedResult() {
        internal_native_ClearCachedResult(native_address);
    }

    /*[-JNI;-NATIVE]
ShapeSettings* nativeObject = (ShapeSettings*)this_addr;
nativeObject->ClearCachedResult();
*/
    public static native void internal_native_ClearCachedResult(long this_addr);

    public long get_mUserData() {
        return internal_native_get_mUserData(native_address);
    }

    /*[-JNI;-NATIVE]
ShapeSettings* nativeObject = (ShapeSettings*)this_addr;
return nativeObject->mUserData;
*/
    public static native long internal_native_get_mUserData(long this_addr);

    public void set_mUserData(long mUserData) {
        internal_native_set_mUserData(native_address, mUserData);
    }

    /*[-JNI;-NATIVE]
ShapeSettings* nativeObject = (ShapeSettings*)this_addr;
nativeObject->mUserData = mUserData;
*/
    public static native void internal_native_set_mUserData(long this_addr, long mUserData);
}
