/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.collision;

import jolt.idl.IDLBase;
import jolt.geometry.AABox;
import jolt.math.Vec3;

public class AABoxCast extends IDLBase {

    private AABox AABox_TEMP_GEN_0;

    private Vec3 Vec3_TEMP_GEN_0;

    static public final AABoxCast NULL = AABoxCast.native_new();

    static public final AABoxCast T_01 = AABoxCast.native_new();

    static public final AABoxCast T_02 = AABoxCast.native_new();

    static public final AABoxCast T_03 = AABoxCast.native_new();

    public AABoxCast() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new AABoxCast();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected AABoxCast(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static AABoxCast native_new() {
        return new AABoxCast((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
AABoxCast* nativeObject = (AABoxCast*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public AABox get_mBox() {
        long pointer = internal_native_get_mBox(native_address);
        if (pointer == 0)
            return AABox.NULL;
        if (AABox_TEMP_GEN_0 == null)
            AABox_TEMP_GEN_0 = AABox.native_new();
        AABox_TEMP_GEN_0.internal_reset(pointer, false);
        return AABox_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
AABoxCast* nativeObject = (AABoxCast*)this_addr;
return (jlong)&nativeObject->mBox;
*/
    public static native long internal_native_get_mBox(long this_addr);

    public void set_mBox(AABox mBox) {
        internal_native_set_mBox(native_address, mBox.native_address);
    }

    /*[-JNI;-NATIVE]
AABoxCast* nativeObject = (AABoxCast*)this_addr;
nativeObject->mBox = *((AABox*)mBox_addr);
*/
    public static native void internal_native_set_mBox(long this_addr, long mBox_addr);

    public Vec3 get_mDirection() {
        long pointer = internal_native_get_mDirection(native_address);
        if (pointer == 0)
            return Vec3.NULL;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = Vec3.native_new();
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
AABoxCast* nativeObject = (AABoxCast*)this_addr;
return (jlong)&nativeObject->mDirection;
*/
    public static native long internal_native_get_mDirection(long this_addr);

    public void set_mDirection(Vec3 mDirection) {
        internal_native_set_mDirection(native_address, mDirection.native_address);
    }

    /*[-JNI;-NATIVE]
AABoxCast* nativeObject = (AABoxCast*)this_addr;
nativeObject->mDirection = *((Vec3*)mDirection_addr);
*/
    public static native void internal_native_set_mDirection(long this_addr, long mDirection_addr);
}
