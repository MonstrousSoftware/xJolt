/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.physics.collision.shape;

import jolt.math.Vec3;

public class EmptyShapeSettings extends ShapeSettings {

    private Vec3 Vec3_TEMP_GEN_0;

    static public final EmptyShapeSettings NULL = EmptyShapeSettings.native_new();

    static public final EmptyShapeSettings T_01 = EmptyShapeSettings.native_new();

    static public final EmptyShapeSettings T_02 = EmptyShapeSettings.native_new();

    static public final EmptyShapeSettings T_03 = EmptyShapeSettings.native_new();

    public EmptyShapeSettings() {
        super((byte) 1, (char) 1);
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new EmptyShapeSettings();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected EmptyShapeSettings(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static EmptyShapeSettings native_new() {
        return new EmptyShapeSettings((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
EmptyShapeSettings* nativeObject = (EmptyShapeSettings*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public Vec3 get_mCenterOfMass() {
        long pointer = internal_native_get_mCenterOfMass(native_address);
        if (pointer == 0)
            return Vec3.NULL;
        if (Vec3_TEMP_GEN_0 == null)
            Vec3_TEMP_GEN_0 = Vec3.native_new();
        Vec3_TEMP_GEN_0.internal_reset(pointer, false);
        return Vec3_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
EmptyShapeSettings* nativeObject = (EmptyShapeSettings*)this_addr;
return (jlong)&nativeObject->mCenterOfMass;
*/
    public static native long internal_native_get_mCenterOfMass(long this_addr);

    public void set_mCenterOfMass(Vec3 mCenterOfMass) {
        internal_native_set_mCenterOfMass(native_address, mCenterOfMass.native_address);
    }

    /*[-JNI;-NATIVE]
EmptyShapeSettings* nativeObject = (EmptyShapeSettings*)this_addr;
nativeObject->mCenterOfMass = *((Vec3*)mCenterOfMass_addr);
*/
    public static native void internal_native_set_mCenterOfMass(long this_addr, long mCenterOfMass_addr);
}
