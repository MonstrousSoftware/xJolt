/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package jolt.enums;

import java.util.Map;
import java.util.HashMap;
import com.github.xpenatan.jParser.idl.IDLEnum;

public enum EMotorState implements IDLEnum<EMotorState> {

    CUSTOM(0), Off(EMotorState_Off_NATIVE()), Velocity(EMotorState_Velocity_NATIVE()), Position(EMotorState_Position_NATIVE());

    private int value;

    private EMotorState(int value) {
        this.value = value;
    }

    public int getValue() {
        return value;
    }

    public EMotorState setValue(int value) {
        if (this != CUSTOM) {
            throw new RuntimeException("Cannot change none CUSTOM value");
        }
        this.value = value;
        return this;
    }

    public EMotorState getCustom() {
        return CUSTOM;
    }

    public static final Map<Integer, EMotorState> MAP = new HashMap<>();

    static {
        for (EMotorState value : values()) {
            if (value != CUSTOM) {
                MAP.put(value.value, value);
            }
        }
    }

    /*[-JNI;-NATIVE]
return (jlong)EMotorState_Off;
*/
    private static native int EMotorState_Off_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)EMotorState_Velocity;
*/
    private static native int EMotorState_Velocity_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)EMotorState_Position;
*/
    private static native int EMotorState_Position_NATIVE();
}
